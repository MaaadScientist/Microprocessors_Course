
Blinky.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000019c  08000000  08000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000288  0800019c  0800019c  0001019c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000424  0800042c  0001042c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000424  08000424  0001042c  2**0
                  CONTENTS
  4 .ARM          00000000  08000424  08000424  0001042c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000424  0800042c  0001042c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000424  08000424  00010424  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000428  08000428  00010428  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001042c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800042c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800042c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0001042c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000000c1  00000000  00000000  0001045c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000000ae  00000000  00000000  0001051d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000050  00000000  00000000  000105d0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000038  00000000  00000000  00010620  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00000ac5  00000000  00000000  00010658  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000187  00000000  00000000  0001111d  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00002f4b  00000000  00000000  000112a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000141ef  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000080  00000000  00000000  0001426c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

0800019c <__do_global_dtors_aux>:
 800019c:	b510      	push	{r4, lr}
 800019e:	4c05      	ldr	r4, [pc, #20]	; (80001b4 <__do_global_dtors_aux+0x18>)
 80001a0:	7823      	ldrb	r3, [r4, #0]
 80001a2:	b933      	cbnz	r3, 80001b2 <__do_global_dtors_aux+0x16>
 80001a4:	4b04      	ldr	r3, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x1c>)
 80001a6:	b113      	cbz	r3, 80001ae <__do_global_dtors_aux+0x12>
 80001a8:	4804      	ldr	r0, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x20>)
 80001aa:	f3af 8000 	nop.w
 80001ae:	2301      	movs	r3, #1
 80001b0:	7023      	strb	r3, [r4, #0]
 80001b2:	bd10      	pop	{r4, pc}
 80001b4:	20000000 	.word	0x20000000
 80001b8:	00000000 	.word	0x00000000
 80001bc:	0800040c 	.word	0x0800040c

080001c0 <frame_dummy>:
 80001c0:	b508      	push	{r3, lr}
 80001c2:	4b03      	ldr	r3, [pc, #12]	; (80001d0 <frame_dummy+0x10>)
 80001c4:	b11b      	cbz	r3, 80001ce <frame_dummy+0xe>
 80001c6:	4903      	ldr	r1, [pc, #12]	; (80001d4 <frame_dummy+0x14>)
 80001c8:	4803      	ldr	r0, [pc, #12]	; (80001d8 <frame_dummy+0x18>)
 80001ca:	f3af 8000 	nop.w
 80001ce:	bd08      	pop	{r3, pc}
 80001d0:	00000000 	.word	0x00000000
 80001d4:	20000004 	.word	0x20000004
 80001d8:	0800040c 	.word	0x0800040c

080001dc <main>:
unsigned long *vector_table[] __attribute__((section(".isr_vector"))) = {
    (unsigned long *)SRAM_END,   // initial stack pointer
    (unsigned long *)main        // main as Reset_Handler
};

int main() {
 80001dc:	b580      	push	{r7, lr}
 80001de:	af00      	add	r7, sp, #0
    // enable GPIOA clock
    *RCC_APB1ENR = 0x3; // + GPIOA? 0x03
 80001e0:	4b55      	ldr	r3, [pc, #340]	; (8000338 <main+0x15c>)
 80001e2:	2203      	movs	r2, #3
 80001e4:	601a      	str	r2, [r3, #0]
    // enable GPIOB clock
    //*RCC_APB1ENR = 0x1; // + GPIOA? 0x03
    // change mode of 5 - MODER[11:10] = 0x01
    setbit(*GPIOA_MODER, 10);
 80001e6:	4b55      	ldr	r3, [pc, #340]	; (800033c <main+0x160>)
 80001e8:	681b      	ldr	r3, [r3, #0]
 80001ea:	4a54      	ldr	r2, [pc, #336]	; (800033c <main+0x160>)
 80001ec:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80001f0:	6013      	str	r3, [r2, #0]
    // change mode of 6 - MODER[13:12] = 0x01
    setbit(*GPIOA_MODER, 12);
 80001f2:	4b52      	ldr	r3, [pc, #328]	; (800033c <main+0x160>)
 80001f4:	681b      	ldr	r3, [r3, #0]
 80001f6:	4a51      	ldr	r2, [pc, #324]	; (800033c <main+0x160>)
 80001f8:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80001fc:	6013      	str	r3, [r2, #0]
    // change mode of 7 - MODER[13:12] = 0x01
    setbit(*GPIOA_MODER, 14);
 80001fe:	4b4f      	ldr	r3, [pc, #316]	; (800033c <main+0x160>)
 8000200:	681b      	ldr	r3, [r3, #0]
 8000202:	4a4e      	ldr	r2, [pc, #312]	; (800033c <main+0x160>)
 8000204:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000208:	6013      	str	r3, [r2, #0]
    //*RCC_APB1ENR = 0x2; // + GPIOA? 0x03
    // change mode of 6 - MODER[13:12] = 0x01
    setbit(*GPIOB_MODER, 12);
 800020a:	4b4d      	ldr	r3, [pc, #308]	; (8000340 <main+0x164>)
 800020c:	681b      	ldr	r3, [r3, #0]
 800020e:	4a4c      	ldr	r2, [pc, #304]	; (8000340 <main+0x164>)
 8000210:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000214:	6013      	str	r3, [r2, #0]

    while(1) {

  //---------------------------forward-----------------------------------------------------------
    	setbit(*GPIOA_ODR, 5);
 8000216:	4b4b      	ldr	r3, [pc, #300]	; (8000344 <main+0x168>)
 8000218:	681b      	ldr	r3, [r3, #0]
 800021a:	4a4a      	ldr	r2, [pc, #296]	; (8000344 <main+0x168>)
 800021c:	f043 0320 	orr.w	r3, r3, #32
 8000220:	6013      	str	r3, [r2, #0]
        delay(200000);
 8000222:	4849      	ldr	r0, [pc, #292]	; (8000348 <main+0x16c>)
 8000224:	f000 f894 	bl	8000350 <delay>
    	clearbit(*GPIOA_ODR, 5);
 8000228:	4b46      	ldr	r3, [pc, #280]	; (8000344 <main+0x168>)
 800022a:	681b      	ldr	r3, [r3, #0]
 800022c:	4a45      	ldr	r2, [pc, #276]	; (8000344 <main+0x168>)
 800022e:	f023 0320 	bic.w	r3, r3, #32
 8000232:	6013      	str	r3, [r2, #0]
        delay(200000);
 8000234:	4844      	ldr	r0, [pc, #272]	; (8000348 <main+0x16c>)
 8000236:	f000 f88b 	bl	8000350 <delay>
        setbit(*GPIOA_ODR, 6);
 800023a:	4b42      	ldr	r3, [pc, #264]	; (8000344 <main+0x168>)
 800023c:	681b      	ldr	r3, [r3, #0]
 800023e:	4a41      	ldr	r2, [pc, #260]	; (8000344 <main+0x168>)
 8000240:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000244:	6013      	str	r3, [r2, #0]
        delay(200000);
 8000246:	4840      	ldr	r0, [pc, #256]	; (8000348 <main+0x16c>)
 8000248:	f000 f882 	bl	8000350 <delay>
        clearbit(*GPIOA_ODR, 6);
 800024c:	4b3d      	ldr	r3, [pc, #244]	; (8000344 <main+0x168>)
 800024e:	681b      	ldr	r3, [r3, #0]
 8000250:	4a3c      	ldr	r2, [pc, #240]	; (8000344 <main+0x168>)
 8000252:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000256:	6013      	str	r3, [r2, #0]
        delay(200000);
 8000258:	483b      	ldr	r0, [pc, #236]	; (8000348 <main+0x16c>)
 800025a:	f000 f879 	bl	8000350 <delay>
        setbit(*GPIOA_ODR, 7);
 800025e:	4b39      	ldr	r3, [pc, #228]	; (8000344 <main+0x168>)
 8000260:	681b      	ldr	r3, [r3, #0]
 8000262:	4a38      	ldr	r2, [pc, #224]	; (8000344 <main+0x168>)
 8000264:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000268:	6013      	str	r3, [r2, #0]
        delay(200000);
 800026a:	4837      	ldr	r0, [pc, #220]	; (8000348 <main+0x16c>)
 800026c:	f000 f870 	bl	8000350 <delay>
        clearbit(*GPIOA_ODR, 7);
 8000270:	4b34      	ldr	r3, [pc, #208]	; (8000344 <main+0x168>)
 8000272:	681b      	ldr	r3, [r3, #0]
 8000274:	4a33      	ldr	r2, [pc, #204]	; (8000344 <main+0x168>)
 8000276:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800027a:	6013      	str	r3, [r2, #0]
        delay(200000);
 800027c:	4832      	ldr	r0, [pc, #200]	; (8000348 <main+0x16c>)
 800027e:	f000 f867 	bl	8000350 <delay>
        setbit(*GPIOB_ODR, 6);
 8000282:	4b32      	ldr	r3, [pc, #200]	; (800034c <main+0x170>)
 8000284:	681b      	ldr	r3, [r3, #0]
 8000286:	4a31      	ldr	r2, [pc, #196]	; (800034c <main+0x170>)
 8000288:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800028c:	6013      	str	r3, [r2, #0]
        delay(200000);
 800028e:	482e      	ldr	r0, [pc, #184]	; (8000348 <main+0x16c>)
 8000290:	f000 f85e 	bl	8000350 <delay>
        clearbit(*GPIOB_ODR, 6);
 8000294:	4b2d      	ldr	r3, [pc, #180]	; (800034c <main+0x170>)
 8000296:	681b      	ldr	r3, [r3, #0]
 8000298:	4a2c      	ldr	r2, [pc, #176]	; (800034c <main+0x170>)
 800029a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800029e:	6013      	str	r3, [r2, #0]
        delay(200000);
 80002a0:	4829      	ldr	r0, [pc, #164]	; (8000348 <main+0x16c>)
 80002a2:	f000 f855 	bl	8000350 <delay>

 //-------------------------backward-------------------------------------------------------------

        setbit(*GPIOB_ODR, 6);
 80002a6:	4b29      	ldr	r3, [pc, #164]	; (800034c <main+0x170>)
 80002a8:	681b      	ldr	r3, [r3, #0]
 80002aa:	4a28      	ldr	r2, [pc, #160]	; (800034c <main+0x170>)
 80002ac:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80002b0:	6013      	str	r3, [r2, #0]
        delay(200000);
 80002b2:	4825      	ldr	r0, [pc, #148]	; (8000348 <main+0x16c>)
 80002b4:	f000 f84c 	bl	8000350 <delay>
        clearbit(*GPIOB_ODR, 6);
 80002b8:	4b24      	ldr	r3, [pc, #144]	; (800034c <main+0x170>)
 80002ba:	681b      	ldr	r3, [r3, #0]
 80002bc:	4a23      	ldr	r2, [pc, #140]	; (800034c <main+0x170>)
 80002be:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80002c2:	6013      	str	r3, [r2, #0]
        delay(200000);
 80002c4:	4820      	ldr	r0, [pc, #128]	; (8000348 <main+0x16c>)
 80002c6:	f000 f843 	bl	8000350 <delay>

        setbit(*GPIOA_ODR, 7);
 80002ca:	4b1e      	ldr	r3, [pc, #120]	; (8000344 <main+0x168>)
 80002cc:	681b      	ldr	r3, [r3, #0]
 80002ce:	4a1d      	ldr	r2, [pc, #116]	; (8000344 <main+0x168>)
 80002d0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002d4:	6013      	str	r3, [r2, #0]
        delay(200000);
 80002d6:	481c      	ldr	r0, [pc, #112]	; (8000348 <main+0x16c>)
 80002d8:	f000 f83a 	bl	8000350 <delay>
        clearbit(*GPIOA_ODR, 7);
 80002dc:	4b19      	ldr	r3, [pc, #100]	; (8000344 <main+0x168>)
 80002de:	681b      	ldr	r3, [r3, #0]
 80002e0:	4a18      	ldr	r2, [pc, #96]	; (8000344 <main+0x168>)
 80002e2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80002e6:	6013      	str	r3, [r2, #0]
        delay(200000);
 80002e8:	4817      	ldr	r0, [pc, #92]	; (8000348 <main+0x16c>)
 80002ea:	f000 f831 	bl	8000350 <delay>

        setbit(*GPIOA_ODR, 6);
 80002ee:	4b15      	ldr	r3, [pc, #84]	; (8000344 <main+0x168>)
 80002f0:	681b      	ldr	r3, [r3, #0]
 80002f2:	4a14      	ldr	r2, [pc, #80]	; (8000344 <main+0x168>)
 80002f4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80002f8:	6013      	str	r3, [r2, #0]
        delay(200000);
 80002fa:	4813      	ldr	r0, [pc, #76]	; (8000348 <main+0x16c>)
 80002fc:	f000 f828 	bl	8000350 <delay>
        clearbit(*GPIOA_ODR, 6);
 8000300:	4b10      	ldr	r3, [pc, #64]	; (8000344 <main+0x168>)
 8000302:	681b      	ldr	r3, [r3, #0]
 8000304:	4a0f      	ldr	r2, [pc, #60]	; (8000344 <main+0x168>)
 8000306:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800030a:	6013      	str	r3, [r2, #0]
        delay(200000);
 800030c:	480e      	ldr	r0, [pc, #56]	; (8000348 <main+0x16c>)
 800030e:	f000 f81f 	bl	8000350 <delay>

        setbit(*GPIOA_ODR, 5);
 8000312:	4b0c      	ldr	r3, [pc, #48]	; (8000344 <main+0x168>)
 8000314:	681b      	ldr	r3, [r3, #0]
 8000316:	4a0b      	ldr	r2, [pc, #44]	; (8000344 <main+0x168>)
 8000318:	f043 0320 	orr.w	r3, r3, #32
 800031c:	6013      	str	r3, [r2, #0]
        delay(200000);
 800031e:	480a      	ldr	r0, [pc, #40]	; (8000348 <main+0x16c>)
 8000320:	f000 f816 	bl	8000350 <delay>
        clearbit(*GPIOA_ODR, 5);
 8000324:	4b07      	ldr	r3, [pc, #28]	; (8000344 <main+0x168>)
 8000326:	681b      	ldr	r3, [r3, #0]
 8000328:	4a06      	ldr	r2, [pc, #24]	; (8000344 <main+0x168>)
 800032a:	f023 0320 	bic.w	r3, r3, #32
 800032e:	6013      	str	r3, [r2, #0]
        delay(200000);
 8000330:	4805      	ldr	r0, [pc, #20]	; (8000348 <main+0x16c>)
 8000332:	f000 f80d 	bl	8000350 <delay>
    	setbit(*GPIOA_ODR, 5);
 8000336:	e76e      	b.n	8000216 <main+0x3a>
 8000338:	40023830 	.word	0x40023830
 800033c:	40020000 	.word	0x40020000
 8000340:	40020400 	.word	0x40020400
 8000344:	40020014 	.word	0x40020014
 8000348:	00030d40 	.word	0x00030d40
 800034c:	40020414 	.word	0x40020414

08000350 <delay>:
    }
}

// delay function - doing literally nothing
void delay(unsigned long count) {
 8000350:	b480      	push	{r7}
 8000352:	b083      	sub	sp, #12
 8000354:	af00      	add	r7, sp, #0
 8000356:	6078      	str	r0, [r7, #4]
    while(count--);
 8000358:	bf00      	nop
 800035a:	687b      	ldr	r3, [r7, #4]
 800035c:	1e5a      	subs	r2, r3, #1
 800035e:	607a      	str	r2, [r7, #4]
 8000360:	2b00      	cmp	r3, #0
 8000362:	d1fa      	bne.n	800035a <delay+0xa>
}
 8000364:	bf00      	nop
 8000366:	370c      	adds	r7, #12
 8000368:	46bd      	mov	sp, r7
 800036a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800036e:	4770      	bx	lr

08000370 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000370:	480d      	ldr	r0, [pc, #52]	; (80003a8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000372:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000374:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000378:	480c      	ldr	r0, [pc, #48]	; (80003ac <LoopForever+0x6>)
  ldr r1, =_edata
 800037a:	490d      	ldr	r1, [pc, #52]	; (80003b0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800037c:	4a0d      	ldr	r2, [pc, #52]	; (80003b4 <LoopForever+0xe>)
  movs r3, #0
 800037e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000380:	e002      	b.n	8000388 <LoopCopyDataInit>

08000382 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000382:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000384:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000386:	3304      	adds	r3, #4

08000388 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000388:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800038a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800038c:	d3f9      	bcc.n	8000382 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800038e:	4a0a      	ldr	r2, [pc, #40]	; (80003b8 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000390:	4c0a      	ldr	r4, [pc, #40]	; (80003bc <LoopForever+0x16>)
  movs r3, #0
 8000392:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000394:	e001      	b.n	800039a <LoopFillZerobss>

08000396 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000396:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000398:	3204      	adds	r2, #4

0800039a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800039a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800039c:	d3fb      	bcc.n	8000396 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800039e:	f000 f811 	bl	80003c4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003a2:	f7ff ff1b 	bl	80001dc <main>

080003a6 <LoopForever>:

LoopForever:
    b LoopForever
 80003a6:	e7fe      	b.n	80003a6 <LoopForever>
  ldr   r0, =_estack
 80003a8:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80003ac:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003b0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80003b4:	0800042c 	.word	0x0800042c
  ldr r2, =_sbss
 80003b8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80003bc:	2000001c 	.word	0x2000001c

080003c0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003c0:	e7fe      	b.n	80003c0 <ADC_IRQHandler>
	...

080003c4 <__libc_init_array>:
 80003c4:	b570      	push	{r4, r5, r6, lr}
 80003c6:	4e0d      	ldr	r6, [pc, #52]	; (80003fc <__libc_init_array+0x38>)
 80003c8:	4c0d      	ldr	r4, [pc, #52]	; (8000400 <__libc_init_array+0x3c>)
 80003ca:	1ba4      	subs	r4, r4, r6
 80003cc:	10a4      	asrs	r4, r4, #2
 80003ce:	2500      	movs	r5, #0
 80003d0:	42a5      	cmp	r5, r4
 80003d2:	d109      	bne.n	80003e8 <__libc_init_array+0x24>
 80003d4:	4e0b      	ldr	r6, [pc, #44]	; (8000404 <__libc_init_array+0x40>)
 80003d6:	4c0c      	ldr	r4, [pc, #48]	; (8000408 <__libc_init_array+0x44>)
 80003d8:	f000 f818 	bl	800040c <_init>
 80003dc:	1ba4      	subs	r4, r4, r6
 80003de:	10a4      	asrs	r4, r4, #2
 80003e0:	2500      	movs	r5, #0
 80003e2:	42a5      	cmp	r5, r4
 80003e4:	d105      	bne.n	80003f2 <__libc_init_array+0x2e>
 80003e6:	bd70      	pop	{r4, r5, r6, pc}
 80003e8:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80003ec:	4798      	blx	r3
 80003ee:	3501      	adds	r5, #1
 80003f0:	e7ee      	b.n	80003d0 <__libc_init_array+0xc>
 80003f2:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80003f6:	4798      	blx	r3
 80003f8:	3501      	adds	r5, #1
 80003fa:	e7f2      	b.n	80003e2 <__libc_init_array+0x1e>
 80003fc:	08000424 	.word	0x08000424
 8000400:	08000424 	.word	0x08000424
 8000404:	08000424 	.word	0x08000424
 8000408:	08000428 	.word	0x08000428

0800040c <_init>:
 800040c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800040e:	bf00      	nop
 8000410:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000412:	bc08      	pop	{r3}
 8000414:	469e      	mov	lr, r3
 8000416:	4770      	bx	lr

08000418 <_fini>:
 8000418:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800041a:	bf00      	nop
 800041c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800041e:	bc08      	pop	{r3}
 8000420:	469e      	mov	lr, r3
 8000422:	4770      	bx	lr

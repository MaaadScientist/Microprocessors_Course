/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

// useful macros to set/clear bit of the number at given address
#define setbit(reg,bit) ((reg) |= (1U << (bit)))
#define clearbit(reg,bit) ((reg) &= (~(1U << (bit))))

// boundary addresses of the peripherals (page. 38)
#define PERIPH_BASE     0x40000000
// stack is on the top of the (S)RAM
// adress of the SRAM base
#define SRAM_BASE       0x20000000
// F401 has 96kB of SRAM
#define SRAM_SIZE	1024*96
// top of the SRAM
#define SRAM_END	(SRAM_BASE + SRAM_SIZE)

// RCC base address (pp. 38)
#define RCC_BASE 	(PERIPH_BASE + 0x23800)
// RCC_APB1ENR offset (pp. 118)
#define RCC_APB1ENR	((unsigned long *)(RCC_BASE + 0x40))

// GPIOB base address
#define GPIOB_BASE	(PERIPH_BASE + 0x20400)
// MODER address
#define GPIOB_MODER ((unsigned long *)(GPIOB_BASE + 0x00))
// ODR address
#define GPIOB_ODR 	((unsigned long *)(GPIOB_BASE + 0x14))

// function prototypes
int main(void);
void delay(unsigned long count);

// reset vector table (pp. 40 of programming manual
// Address        Description
// =======        ===========
// 0x0000 0000    Initial Stack Pointer (SP) value
// 0x0000 0004    Reset exception
// 0x0000 0008    NMI - Non Maskable Interrupt
// 0x0000 000C    Hard fault
// 0x0000 0010    Memory management fault
// 0x0000 0014    Bus fault
// 0x0000 0018    Usage fault
//
// minimal version -> stack pointer & reset exception (function main)
// this will place two unsigned long numbers to fixed memory location
unsigned long *vector_table[] __attribute__((section(".isr_vector"))) = {
    (unsigned long *)SRAM_END,   // initial stack pointer
    (unsigned long *)main        // main as Reset_Handler
};

int main() {
    // change mode of 6 - MODER[13:12] = 0x01
    setbit(*GPIOB_MODER, 12);

    while(1) {
        setbit(*GPIOB_ODR, 6);
        delay(2000000);
        clearbit(*GPIOB_ODR, 6);
        delay(2000000);

    }
}

// delay function - doing literally nothing
void delay(unsigned long count) {
    while(count--);
}

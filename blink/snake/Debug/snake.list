
snake.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000019c  08000000  08000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002b8  0800019c  0800019c  0001019c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000454  0800045c  0001045c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000454  08000454  0001045c  2**0
                  CONTENTS
  4 .ARM          00000000  08000454  08000454  0001045c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000454  0800045c  0001045c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000454  08000454  00010454  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000458  08000458  00010458  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001045c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800045c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800045c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0001045c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000000c1  00000000  00000000  0001048c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000000ae  00000000  00000000  0001054d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000050  00000000  00000000  00010600  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000038  00000000  00000000  00010650  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00000ac5  00000000  00000000  00010688  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000018b  00000000  00000000  0001114d  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00002f4a  00000000  00000000  000112d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00014222  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000080  00000000  00000000  000142a0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

0800019c <__do_global_dtors_aux>:
 800019c:	b510      	push	{r4, lr}
 800019e:	4c05      	ldr	r4, [pc, #20]	; (80001b4 <__do_global_dtors_aux+0x18>)
 80001a0:	7823      	ldrb	r3, [r4, #0]
 80001a2:	b933      	cbnz	r3, 80001b2 <__do_global_dtors_aux+0x16>
 80001a4:	4b04      	ldr	r3, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x1c>)
 80001a6:	b113      	cbz	r3, 80001ae <__do_global_dtors_aux+0x12>
 80001a8:	4804      	ldr	r0, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x20>)
 80001aa:	f3af 8000 	nop.w
 80001ae:	2301      	movs	r3, #1
 80001b0:	7023      	strb	r3, [r4, #0]
 80001b2:	bd10      	pop	{r4, pc}
 80001b4:	20000000 	.word	0x20000000
 80001b8:	00000000 	.word	0x00000000
 80001bc:	0800043c 	.word	0x0800043c

080001c0 <frame_dummy>:
 80001c0:	b508      	push	{r3, lr}
 80001c2:	4b03      	ldr	r3, [pc, #12]	; (80001d0 <frame_dummy+0x10>)
 80001c4:	b11b      	cbz	r3, 80001ce <frame_dummy+0xe>
 80001c6:	4903      	ldr	r1, [pc, #12]	; (80001d4 <frame_dummy+0x14>)
 80001c8:	4803      	ldr	r0, [pc, #12]	; (80001d8 <frame_dummy+0x18>)
 80001ca:	f3af 8000 	nop.w
 80001ce:	bd08      	pop	{r3, pc}
 80001d0:	00000000 	.word	0x00000000
 80001d4:	20000004 	.word	0x20000004
 80001d8:	0800043c 	.word	0x0800043c

080001dc <main>:
unsigned long *vector_table[] __attribute__((section(".isr_vector"))) = {
    (unsigned long *)SRAM_END,   // initial stack pointer
    (unsigned long *)main        // main as Reset_Handler
};

int main() {
 80001dc:	b580      	push	{r7, lr}
 80001de:	af00      	add	r7, sp, #0
    // enable GPIOA clock
    *RCC_APB1ENR = 0x3; // + GPIOA? 0x03
 80001e0:	4b61      	ldr	r3, [pc, #388]	; (8000368 <main+0x18c>)
 80001e2:	2203      	movs	r2, #3
 80001e4:	601a      	str	r2, [r3, #0]
    // enable GPIOB clock
    //*RCC_APB1ENR = 0x1; // + GPIOA? 0x03
    // change mode of 5 - MODER[11:10] = 0x01
    setbit(*GPIOA_MODER, 10);
 80001e6:	4b61      	ldr	r3, [pc, #388]	; (800036c <main+0x190>)
 80001e8:	681b      	ldr	r3, [r3, #0]
 80001ea:	4a60      	ldr	r2, [pc, #384]	; (800036c <main+0x190>)
 80001ec:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80001f0:	6013      	str	r3, [r2, #0]
    // change mode of 6 - MODER[13:12] = 0x01
    setbit(*GPIOA_MODER, 12);
 80001f2:	4b5e      	ldr	r3, [pc, #376]	; (800036c <main+0x190>)
 80001f4:	681b      	ldr	r3, [r3, #0]
 80001f6:	4a5d      	ldr	r2, [pc, #372]	; (800036c <main+0x190>)
 80001f8:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80001fc:	6013      	str	r3, [r2, #0]
    // change mode of 7 - MODER[13:12] = 0x01
    setbit(*GPIOA_MODER, 14);
 80001fe:	4b5b      	ldr	r3, [pc, #364]	; (800036c <main+0x190>)
 8000200:	681b      	ldr	r3, [r3, #0]
 8000202:	4a5a      	ldr	r2, [pc, #360]	; (800036c <main+0x190>)
 8000204:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000208:	6013      	str	r3, [r2, #0]
    //*RCC_APB1ENR = 0x2; // + GPIOA? 0x03
    // change mode of 6 - MODER[13:12] = 0x01
    setbit(*GPIOB_MODER, 12);
 800020a:	4b59      	ldr	r3, [pc, #356]	; (8000370 <main+0x194>)
 800020c:	681b      	ldr	r3, [r3, #0]
 800020e:	4a58      	ldr	r2, [pc, #352]	; (8000370 <main+0x194>)
 8000210:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000214:	6013      	str	r3, [r2, #0]

    // turn all the leds off
    setbit(*GPIOA_ODR, 5);
 8000216:	4b57      	ldr	r3, [pc, #348]	; (8000374 <main+0x198>)
 8000218:	681b      	ldr	r3, [r3, #0]
 800021a:	4a56      	ldr	r2, [pc, #344]	; (8000374 <main+0x198>)
 800021c:	f043 0320 	orr.w	r3, r3, #32
 8000220:	6013      	str	r3, [r2, #0]
    setbit(*GPIOA_ODR, 6);
 8000222:	4b54      	ldr	r3, [pc, #336]	; (8000374 <main+0x198>)
 8000224:	681b      	ldr	r3, [r3, #0]
 8000226:	4a53      	ldr	r2, [pc, #332]	; (8000374 <main+0x198>)
 8000228:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800022c:	6013      	str	r3, [r2, #0]
    setbit(*GPIOA_ODR, 7);
 800022e:	4b51      	ldr	r3, [pc, #324]	; (8000374 <main+0x198>)
 8000230:	681b      	ldr	r3, [r3, #0]
 8000232:	4a50      	ldr	r2, [pc, #320]	; (8000374 <main+0x198>)
 8000234:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000238:	6013      	str	r3, [r2, #0]
    setbit(*GPIOB_ODR, 6);
 800023a:	4b4f      	ldr	r3, [pc, #316]	; (8000378 <main+0x19c>)
 800023c:	681b      	ldr	r3, [r3, #0]
 800023e:	4a4e      	ldr	r2, [pc, #312]	; (8000378 <main+0x19c>)
 8000240:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000244:	6013      	str	r3, [r2, #0]

    while(1) {

  //---------------------------forward-----------------------------------------------------------
    	clearbit(*GPIOA_ODR, 5);
 8000246:	4b4b      	ldr	r3, [pc, #300]	; (8000374 <main+0x198>)
 8000248:	681b      	ldr	r3, [r3, #0]
 800024a:	4a4a      	ldr	r2, [pc, #296]	; (8000374 <main+0x198>)
 800024c:	f023 0320 	bic.w	r3, r3, #32
 8000250:	6013      	str	r3, [r2, #0]
        delay(200000);
 8000252:	484a      	ldr	r0, [pc, #296]	; (800037c <main+0x1a0>)
 8000254:	f000 f894 	bl	8000380 <delay>
    	setbit(*GPIOA_ODR, 5);
 8000258:	4b46      	ldr	r3, [pc, #280]	; (8000374 <main+0x198>)
 800025a:	681b      	ldr	r3, [r3, #0]
 800025c:	4a45      	ldr	r2, [pc, #276]	; (8000374 <main+0x198>)
 800025e:	f043 0320 	orr.w	r3, r3, #32
 8000262:	6013      	str	r3, [r2, #0]
        delay(200000);
 8000264:	4845      	ldr	r0, [pc, #276]	; (800037c <main+0x1a0>)
 8000266:	f000 f88b 	bl	8000380 <delay>
        clearbit(*GPIOA_ODR, 6);
 800026a:	4b42      	ldr	r3, [pc, #264]	; (8000374 <main+0x198>)
 800026c:	681b      	ldr	r3, [r3, #0]
 800026e:	4a41      	ldr	r2, [pc, #260]	; (8000374 <main+0x198>)
 8000270:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000274:	6013      	str	r3, [r2, #0]
        delay(200000);
 8000276:	4841      	ldr	r0, [pc, #260]	; (800037c <main+0x1a0>)
 8000278:	f000 f882 	bl	8000380 <delay>
        setbit(*GPIOA_ODR, 6);
 800027c:	4b3d      	ldr	r3, [pc, #244]	; (8000374 <main+0x198>)
 800027e:	681b      	ldr	r3, [r3, #0]
 8000280:	4a3c      	ldr	r2, [pc, #240]	; (8000374 <main+0x198>)
 8000282:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000286:	6013      	str	r3, [r2, #0]
        delay(200000);
 8000288:	483c      	ldr	r0, [pc, #240]	; (800037c <main+0x1a0>)
 800028a:	f000 f879 	bl	8000380 <delay>
        clearbit(*GPIOA_ODR, 7);
 800028e:	4b39      	ldr	r3, [pc, #228]	; (8000374 <main+0x198>)
 8000290:	681b      	ldr	r3, [r3, #0]
 8000292:	4a38      	ldr	r2, [pc, #224]	; (8000374 <main+0x198>)
 8000294:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000298:	6013      	str	r3, [r2, #0]
        delay(200000);
 800029a:	4838      	ldr	r0, [pc, #224]	; (800037c <main+0x1a0>)
 800029c:	f000 f870 	bl	8000380 <delay>
        setbit(*GPIOA_ODR, 7);
 80002a0:	4b34      	ldr	r3, [pc, #208]	; (8000374 <main+0x198>)
 80002a2:	681b      	ldr	r3, [r3, #0]
 80002a4:	4a33      	ldr	r2, [pc, #204]	; (8000374 <main+0x198>)
 80002a6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002aa:	6013      	str	r3, [r2, #0]
        delay(200000);
 80002ac:	4833      	ldr	r0, [pc, #204]	; (800037c <main+0x1a0>)
 80002ae:	f000 f867 	bl	8000380 <delay>
        clearbit(*GPIOB_ODR, 6);
 80002b2:	4b31      	ldr	r3, [pc, #196]	; (8000378 <main+0x19c>)
 80002b4:	681b      	ldr	r3, [r3, #0]
 80002b6:	4a30      	ldr	r2, [pc, #192]	; (8000378 <main+0x19c>)
 80002b8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80002bc:	6013      	str	r3, [r2, #0]
        delay(200000);
 80002be:	482f      	ldr	r0, [pc, #188]	; (800037c <main+0x1a0>)
 80002c0:	f000 f85e 	bl	8000380 <delay>
        setbit(*GPIOB_ODR, 6);
 80002c4:	4b2c      	ldr	r3, [pc, #176]	; (8000378 <main+0x19c>)
 80002c6:	681b      	ldr	r3, [r3, #0]
 80002c8:	4a2b      	ldr	r2, [pc, #172]	; (8000378 <main+0x19c>)
 80002ca:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80002ce:	6013      	str	r3, [r2, #0]
        delay(200000);
 80002d0:	482a      	ldr	r0, [pc, #168]	; (800037c <main+0x1a0>)
 80002d2:	f000 f855 	bl	8000380 <delay>

 //-------------------------backward-------------------------------------------------------------

        clearbit(*GPIOB_ODR, 6);
 80002d6:	4b28      	ldr	r3, [pc, #160]	; (8000378 <main+0x19c>)
 80002d8:	681b      	ldr	r3, [r3, #0]
 80002da:	4a27      	ldr	r2, [pc, #156]	; (8000378 <main+0x19c>)
 80002dc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80002e0:	6013      	str	r3, [r2, #0]
        delay(200000);
 80002e2:	4826      	ldr	r0, [pc, #152]	; (800037c <main+0x1a0>)
 80002e4:	f000 f84c 	bl	8000380 <delay>
        setbit(*GPIOB_ODR, 6);
 80002e8:	4b23      	ldr	r3, [pc, #140]	; (8000378 <main+0x19c>)
 80002ea:	681b      	ldr	r3, [r3, #0]
 80002ec:	4a22      	ldr	r2, [pc, #136]	; (8000378 <main+0x19c>)
 80002ee:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80002f2:	6013      	str	r3, [r2, #0]
        delay(200000);
 80002f4:	4821      	ldr	r0, [pc, #132]	; (800037c <main+0x1a0>)
 80002f6:	f000 f843 	bl	8000380 <delay>

        clearbit(*GPIOA_ODR, 7);
 80002fa:	4b1e      	ldr	r3, [pc, #120]	; (8000374 <main+0x198>)
 80002fc:	681b      	ldr	r3, [r3, #0]
 80002fe:	4a1d      	ldr	r2, [pc, #116]	; (8000374 <main+0x198>)
 8000300:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000304:	6013      	str	r3, [r2, #0]
        delay(200000);
 8000306:	481d      	ldr	r0, [pc, #116]	; (800037c <main+0x1a0>)
 8000308:	f000 f83a 	bl	8000380 <delay>
        setbit(*GPIOA_ODR, 7);
 800030c:	4b19      	ldr	r3, [pc, #100]	; (8000374 <main+0x198>)
 800030e:	681b      	ldr	r3, [r3, #0]
 8000310:	4a18      	ldr	r2, [pc, #96]	; (8000374 <main+0x198>)
 8000312:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000316:	6013      	str	r3, [r2, #0]
        delay(200000);
 8000318:	4818      	ldr	r0, [pc, #96]	; (800037c <main+0x1a0>)
 800031a:	f000 f831 	bl	8000380 <delay>

        clearbit(*GPIOA_ODR, 6);
 800031e:	4b15      	ldr	r3, [pc, #84]	; (8000374 <main+0x198>)
 8000320:	681b      	ldr	r3, [r3, #0]
 8000322:	4a14      	ldr	r2, [pc, #80]	; (8000374 <main+0x198>)
 8000324:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000328:	6013      	str	r3, [r2, #0]
        delay(200000);
 800032a:	4814      	ldr	r0, [pc, #80]	; (800037c <main+0x1a0>)
 800032c:	f000 f828 	bl	8000380 <delay>
        setbit(*GPIOA_ODR, 6);
 8000330:	4b10      	ldr	r3, [pc, #64]	; (8000374 <main+0x198>)
 8000332:	681b      	ldr	r3, [r3, #0]
 8000334:	4a0f      	ldr	r2, [pc, #60]	; (8000374 <main+0x198>)
 8000336:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800033a:	6013      	str	r3, [r2, #0]
        delay(200000);
 800033c:	480f      	ldr	r0, [pc, #60]	; (800037c <main+0x1a0>)
 800033e:	f000 f81f 	bl	8000380 <delay>

        clearbit(*GPIOA_ODR, 5);
 8000342:	4b0c      	ldr	r3, [pc, #48]	; (8000374 <main+0x198>)
 8000344:	681b      	ldr	r3, [r3, #0]
 8000346:	4a0b      	ldr	r2, [pc, #44]	; (8000374 <main+0x198>)
 8000348:	f023 0320 	bic.w	r3, r3, #32
 800034c:	6013      	str	r3, [r2, #0]
        delay(200000);
 800034e:	480b      	ldr	r0, [pc, #44]	; (800037c <main+0x1a0>)
 8000350:	f000 f816 	bl	8000380 <delay>
        setbit(*GPIOA_ODR, 5);
 8000354:	4b07      	ldr	r3, [pc, #28]	; (8000374 <main+0x198>)
 8000356:	681b      	ldr	r3, [r3, #0]
 8000358:	4a06      	ldr	r2, [pc, #24]	; (8000374 <main+0x198>)
 800035a:	f043 0320 	orr.w	r3, r3, #32
 800035e:	6013      	str	r3, [r2, #0]
        delay(200000);
 8000360:	4806      	ldr	r0, [pc, #24]	; (800037c <main+0x1a0>)
 8000362:	f000 f80d 	bl	8000380 <delay>
    	clearbit(*GPIOA_ODR, 5);
 8000366:	e76e      	b.n	8000246 <main+0x6a>
 8000368:	40023830 	.word	0x40023830
 800036c:	40020000 	.word	0x40020000
 8000370:	40020400 	.word	0x40020400
 8000374:	40020014 	.word	0x40020014
 8000378:	40020414 	.word	0x40020414
 800037c:	00030d40 	.word	0x00030d40

08000380 <delay>:

    }
}

// delay function - doing literally nothing
void delay(unsigned long count) {
 8000380:	b480      	push	{r7}
 8000382:	b083      	sub	sp, #12
 8000384:	af00      	add	r7, sp, #0
 8000386:	6078      	str	r0, [r7, #4]
    while(count--);
 8000388:	bf00      	nop
 800038a:	687b      	ldr	r3, [r7, #4]
 800038c:	1e5a      	subs	r2, r3, #1
 800038e:	607a      	str	r2, [r7, #4]
 8000390:	2b00      	cmp	r3, #0
 8000392:	d1fa      	bne.n	800038a <delay+0xa>
}
 8000394:	bf00      	nop
 8000396:	370c      	adds	r7, #12
 8000398:	46bd      	mov	sp, r7
 800039a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800039e:	4770      	bx	lr

080003a0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80003a0:	480d      	ldr	r0, [pc, #52]	; (80003d8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80003a2:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80003a4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80003a8:	480c      	ldr	r0, [pc, #48]	; (80003dc <LoopForever+0x6>)
  ldr r1, =_edata
 80003aa:	490d      	ldr	r1, [pc, #52]	; (80003e0 <LoopForever+0xa>)
  ldr r2, =_sidata
 80003ac:	4a0d      	ldr	r2, [pc, #52]	; (80003e4 <LoopForever+0xe>)
  movs r3, #0
 80003ae:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80003b0:	e002      	b.n	80003b8 <LoopCopyDataInit>

080003b2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80003b2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80003b4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80003b6:	3304      	adds	r3, #4

080003b8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80003b8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003ba:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80003bc:	d3f9      	bcc.n	80003b2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003be:	4a0a      	ldr	r2, [pc, #40]	; (80003e8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80003c0:	4c0a      	ldr	r4, [pc, #40]	; (80003ec <LoopForever+0x16>)
  movs r3, #0
 80003c2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003c4:	e001      	b.n	80003ca <LoopFillZerobss>

080003c6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003c6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003c8:	3204      	adds	r2, #4

080003ca <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003ca:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003cc:	d3fb      	bcc.n	80003c6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003ce:	f000 f811 	bl	80003f4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003d2:	f7ff ff03 	bl	80001dc <main>

080003d6 <LoopForever>:

LoopForever:
    b LoopForever
 80003d6:	e7fe      	b.n	80003d6 <LoopForever>
  ldr   r0, =_estack
 80003d8:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80003dc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003e0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80003e4:	0800045c 	.word	0x0800045c
  ldr r2, =_sbss
 80003e8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80003ec:	2000001c 	.word	0x2000001c

080003f0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003f0:	e7fe      	b.n	80003f0 <ADC_IRQHandler>
	...

080003f4 <__libc_init_array>:
 80003f4:	b570      	push	{r4, r5, r6, lr}
 80003f6:	4e0d      	ldr	r6, [pc, #52]	; (800042c <__libc_init_array+0x38>)
 80003f8:	4c0d      	ldr	r4, [pc, #52]	; (8000430 <__libc_init_array+0x3c>)
 80003fa:	1ba4      	subs	r4, r4, r6
 80003fc:	10a4      	asrs	r4, r4, #2
 80003fe:	2500      	movs	r5, #0
 8000400:	42a5      	cmp	r5, r4
 8000402:	d109      	bne.n	8000418 <__libc_init_array+0x24>
 8000404:	4e0b      	ldr	r6, [pc, #44]	; (8000434 <__libc_init_array+0x40>)
 8000406:	4c0c      	ldr	r4, [pc, #48]	; (8000438 <__libc_init_array+0x44>)
 8000408:	f000 f818 	bl	800043c <_init>
 800040c:	1ba4      	subs	r4, r4, r6
 800040e:	10a4      	asrs	r4, r4, #2
 8000410:	2500      	movs	r5, #0
 8000412:	42a5      	cmp	r5, r4
 8000414:	d105      	bne.n	8000422 <__libc_init_array+0x2e>
 8000416:	bd70      	pop	{r4, r5, r6, pc}
 8000418:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800041c:	4798      	blx	r3
 800041e:	3501      	adds	r5, #1
 8000420:	e7ee      	b.n	8000400 <__libc_init_array+0xc>
 8000422:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000426:	4798      	blx	r3
 8000428:	3501      	adds	r5, #1
 800042a:	e7f2      	b.n	8000412 <__libc_init_array+0x1e>
 800042c:	08000454 	.word	0x08000454
 8000430:	08000454 	.word	0x08000454
 8000434:	08000454 	.word	0x08000454
 8000438:	08000458 	.word	0x08000458

0800043c <_init>:
 800043c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800043e:	bf00      	nop
 8000440:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000442:	bc08      	pop	{r3}
 8000444:	469e      	mov	lr, r3
 8000446:	4770      	bx	lr

08000448 <_fini>:
 8000448:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800044a:	bf00      	nop
 800044c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800044e:	bc08      	pop	{r3}
 8000450:	469e      	mov	lr, r3
 8000452:	4770      	bx	lr


Snake2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001d4  08000000  08000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000014c4  080001e0  080001e0  000101e0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000d4  080016a4  080016a4  000116a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001778  08001778  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001778  08001778  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001778  08001778  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001778  08001778  00011778  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800177c  0800177c  0001177c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001780  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000034  20000064  080017e4  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000098  080017e4  00020098  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000230c  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000656  00000000  00000000  000223a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000148  00000000  00000000  000229f8  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000110  00000000  00000000  00022b40  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002a1c  00000000  00000000  00022c50  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000188e  00000000  00000000  0002566c  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00009461  00000000  00000000  00026efa  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0003035b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b84  00000000  00000000  000303d8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001e0 <__do_global_dtors_aux>:
 80001e0:	b510      	push	{r4, lr}
 80001e2:	4c05      	ldr	r4, [pc, #20]	; (80001f8 <__do_global_dtors_aux+0x18>)
 80001e4:	7823      	ldrb	r3, [r4, #0]
 80001e6:	b933      	cbnz	r3, 80001f6 <__do_global_dtors_aux+0x16>
 80001e8:	4b04      	ldr	r3, [pc, #16]	; (80001fc <__do_global_dtors_aux+0x1c>)
 80001ea:	b113      	cbz	r3, 80001f2 <__do_global_dtors_aux+0x12>
 80001ec:	4804      	ldr	r0, [pc, #16]	; (8000200 <__do_global_dtors_aux+0x20>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	2301      	movs	r3, #1
 80001f4:	7023      	strb	r3, [r4, #0]
 80001f6:	bd10      	pop	{r4, pc}
 80001f8:	20000064 	.word	0x20000064
 80001fc:	00000000 	.word	0x00000000
 8000200:	0800168c 	.word	0x0800168c

08000204 <frame_dummy>:
 8000204:	b508      	push	{r3, lr}
 8000206:	4b03      	ldr	r3, [pc, #12]	; (8000214 <frame_dummy+0x10>)
 8000208:	b11b      	cbz	r3, 8000212 <frame_dummy+0xe>
 800020a:	4903      	ldr	r1, [pc, #12]	; (8000218 <frame_dummy+0x14>)
 800020c:	4803      	ldr	r0, [pc, #12]	; (800021c <frame_dummy+0x18>)
 800020e:	f3af 8000 	nop.w
 8000212:	bd08      	pop	{r3, pc}
 8000214:	00000000 	.word	0x00000000
 8000218:	20000068 	.word	0x20000068
 800021c:	0800168c 	.word	0x0800168c

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <main>:
	0,								// 13 Reserved
	0,								// 14 PendSV
	(unsigned long *)systick_handler// 15 Systick
};

int main() {
 80002c0:	b580      	push	{r7, lr}
 80002c2:	b082      	sub	sp, #8
 80002c4:	af02      	add	r7, sp, #8
	printf("init section\n");
 80002c6:	484f      	ldr	r0, [pc, #316]	; (8000404 <main+0x144>)
 80002c8:	f000 fb0c 	bl	80008e4 <puts>
    // enable GPIOA clock
    *RCC_APB1ENR = 0x3; // + GPIOA? 0x03
 80002cc:	4b4e      	ldr	r3, [pc, #312]	; (8000408 <main+0x148>)
 80002ce:	2203      	movs	r2, #3
 80002d0:	601a      	str	r2, [r3, #0]
    // change mode of 5th - MODER[11:10] = 0x01
    setbit(*GPIOA_MODER, 10);
 80002d2:	4b4e      	ldr	r3, [pc, #312]	; (800040c <main+0x14c>)
 80002d4:	681b      	ldr	r3, [r3, #0]
 80002d6:	4a4d      	ldr	r2, [pc, #308]	; (800040c <main+0x14c>)
 80002d8:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80002dc:	6013      	str	r3, [r2, #0]
    // change mode of 6th - MODER[13:12] = 0x01
    setbit(*GPIOA_MODER, 12);
 80002de:	4b4b      	ldr	r3, [pc, #300]	; (800040c <main+0x14c>)
 80002e0:	681b      	ldr	r3, [r3, #0]
 80002e2:	4a4a      	ldr	r2, [pc, #296]	; (800040c <main+0x14c>)
 80002e4:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80002e8:	6013      	str	r3, [r2, #0]
    setbit(*GPIOA_MODER, 14);
 80002ea:	4b48      	ldr	r3, [pc, #288]	; (800040c <main+0x14c>)
 80002ec:	681b      	ldr	r3, [r3, #0]
 80002ee:	4a47      	ldr	r2, [pc, #284]	; (800040c <main+0x14c>)
 80002f0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80002f4:	6013      	str	r3, [r2, #0]
     //*RCC_APB1ENR = 0x2; // + GPIOA? 0x03
     // change mode of 6 - MODER[13:12] = 0x01
     setbit(*GPIOB_MODER, 12);
 80002f6:	4b46      	ldr	r3, [pc, #280]	; (8000410 <main+0x150>)
 80002f8:	681b      	ldr	r3, [r3, #0]
 80002fa:	4a45      	ldr	r2, [pc, #276]	; (8000410 <main+0x150>)
 80002fc:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000300:	6013      	str	r3, [r2, #0]
    // Initialize systick without interrupt
     init_systick(1000, 0);
 8000302:	2100      	movs	r1, #0
 8000304:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000308:	f000 f8aa 	bl	8000460 <init_systick>
    // Initialize systick with interrupt
    //  NOTE: comment out inside while loop
    //init_systick(2000000, 1); //

    printf("loop begins\n");
 800030c:	4841      	ldr	r0, [pc, #260]	; (8000414 <main+0x154>)
 800030e:	f000 fae9 	bl	80008e4 <puts>
    t = 1000;
 8000312:	4b41      	ldr	r3, [pc, #260]	; (8000418 <main+0x158>)
 8000314:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000318:	601a      	str	r2, [r3, #0]
    	/*
    	 * if we like to know GPIOA 4 - middle button of the shield is connected there
    	 */

    	// pooling :-)
    	 if (getbit(*GPIOA_IDR, 4) == 0)
 800031a:	4b40      	ldr	r3, [pc, #256]	; (800041c <main+0x15c>)
 800031c:	681b      	ldr	r3, [r3, #0]
 800031e:	f003 0310 	and.w	r3, r3, #16
 8000322:	2b00      	cmp	r3, #0
 8000324:	d106      	bne.n	8000334 <main+0x74>
    	 {
    		 t = 250;
 8000326:	4b3c      	ldr	r3, [pc, #240]	; (8000418 <main+0x158>)
 8000328:	22fa      	movs	r2, #250	; 0xfa
 800032a:	601a      	str	r2, [r3, #0]
    	 	 printf("button pushed");
 800032c:	483c      	ldr	r0, [pc, #240]	; (8000420 <main+0x160>)
 800032e:	f000 fa65 	bl	80007fc <iprintf>
 8000332:	e003      	b.n	800033c <main+0x7c>
    	 }
    	 else
    	 {
    		 t = 2000;
 8000334:	4b38      	ldr	r3, [pc, #224]	; (8000418 <main+0x158>)
 8000336:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
 800033a:	601a      	str	r2, [r3, #0]
    	 }

    	 if (getbit(*GPIOA_IDR,1) == 0)
 800033c:	4b37      	ldr	r3, [pc, #220]	; (800041c <main+0x15c>)
 800033e:	681b      	ldr	r3, [r3, #0]
 8000340:	f003 0302 	and.w	r3, r3, #2
 8000344:	2b00      	cmp	r3, #0
 8000346:	d124      	bne.n	8000392 <main+0xd2>
    	 {
    		 //Forward
    		 blink2(GPIOA_ODR,GPIOA_ODR,5,6,t);
 8000348:	4b33      	ldr	r3, [pc, #204]	; (8000418 <main+0x158>)
 800034a:	681b      	ldr	r3, [r3, #0]
 800034c:	9300      	str	r3, [sp, #0]
 800034e:	2306      	movs	r3, #6
 8000350:	2205      	movs	r2, #5
 8000352:	4934      	ldr	r1, [pc, #208]	; (8000424 <main+0x164>)
 8000354:	4833      	ldr	r0, [pc, #204]	; (8000424 <main+0x164>)
 8000356:	f000 f8eb 	bl	8000530 <blink2>
    		 blink2(GPIOA_ODR,GPIOB_ODR,7,6,t);
 800035a:	4b2f      	ldr	r3, [pc, #188]	; (8000418 <main+0x158>)
 800035c:	681b      	ldr	r3, [r3, #0]
 800035e:	9300      	str	r3, [sp, #0]
 8000360:	2306      	movs	r3, #6
 8000362:	2207      	movs	r2, #7
 8000364:	4930      	ldr	r1, [pc, #192]	; (8000428 <main+0x168>)
 8000366:	482f      	ldr	r0, [pc, #188]	; (8000424 <main+0x164>)
 8000368:	f000 f8e2 	bl	8000530 <blink2>
    		 //backward
    		 blink2(GPIOB_ODR,GPIOA_ODR,6,7,t);
 800036c:	4b2a      	ldr	r3, [pc, #168]	; (8000418 <main+0x158>)
 800036e:	681b      	ldr	r3, [r3, #0]
 8000370:	9300      	str	r3, [sp, #0]
 8000372:	2307      	movs	r3, #7
 8000374:	2206      	movs	r2, #6
 8000376:	492b      	ldr	r1, [pc, #172]	; (8000424 <main+0x164>)
 8000378:	482b      	ldr	r0, [pc, #172]	; (8000428 <main+0x168>)
 800037a:	f000 f8d9 	bl	8000530 <blink2>
    		 blink2(GPIOA_ODR,GPIOA_ODR,5,6,t);
 800037e:	4b26      	ldr	r3, [pc, #152]	; (8000418 <main+0x158>)
 8000380:	681b      	ldr	r3, [r3, #0]
 8000382:	9300      	str	r3, [sp, #0]
 8000384:	2306      	movs	r3, #6
 8000386:	2205      	movs	r2, #5
 8000388:	4926      	ldr	r1, [pc, #152]	; (8000424 <main+0x164>)
 800038a:	4826      	ldr	r0, [pc, #152]	; (8000424 <main+0x164>)
 800038c:	f000 f8d0 	bl	8000530 <blink2>
 8000390:	e7c3      	b.n	800031a <main+0x5a>
    	 }
    	 else
    	 {

    		 //---------------------------forward-----------------------------------------------------------
    		 blink(GPIOA_ODR, 5,t);
 8000392:	4b21      	ldr	r3, [pc, #132]	; (8000418 <main+0x158>)
 8000394:	681b      	ldr	r3, [r3, #0]
 8000396:	461a      	mov	r2, r3
 8000398:	2105      	movs	r1, #5
 800039a:	4822      	ldr	r0, [pc, #136]	; (8000424 <main+0x164>)
 800039c:	f000 f8a2 	bl	80004e4 <blink>
    		 blink(GPIOA_ODR, 6,t);
 80003a0:	4b1d      	ldr	r3, [pc, #116]	; (8000418 <main+0x158>)
 80003a2:	681b      	ldr	r3, [r3, #0]
 80003a4:	461a      	mov	r2, r3
 80003a6:	2106      	movs	r1, #6
 80003a8:	481e      	ldr	r0, [pc, #120]	; (8000424 <main+0x164>)
 80003aa:	f000 f89b 	bl	80004e4 <blink>
    		 blink(GPIOA_ODR, 7,t);
 80003ae:	4b1a      	ldr	r3, [pc, #104]	; (8000418 <main+0x158>)
 80003b0:	681b      	ldr	r3, [r3, #0]
 80003b2:	461a      	mov	r2, r3
 80003b4:	2107      	movs	r1, #7
 80003b6:	481b      	ldr	r0, [pc, #108]	; (8000424 <main+0x164>)
 80003b8:	f000 f894 	bl	80004e4 <blink>
    		 blink(GPIOB_ODR, 6,t);
 80003bc:	4b16      	ldr	r3, [pc, #88]	; (8000418 <main+0x158>)
 80003be:	681b      	ldr	r3, [r3, #0]
 80003c0:	461a      	mov	r2, r3
 80003c2:	2106      	movs	r1, #6
 80003c4:	4818      	ldr	r0, [pc, #96]	; (8000428 <main+0x168>)
 80003c6:	f000 f88d 	bl	80004e4 <blink>

    		 //-------------------------backward-------------------------------------------------------------

    		 blink(GPIOB_ODR, 6,t);
 80003ca:	4b13      	ldr	r3, [pc, #76]	; (8000418 <main+0x158>)
 80003cc:	681b      	ldr	r3, [r3, #0]
 80003ce:	461a      	mov	r2, r3
 80003d0:	2106      	movs	r1, #6
 80003d2:	4815      	ldr	r0, [pc, #84]	; (8000428 <main+0x168>)
 80003d4:	f000 f886 	bl	80004e4 <blink>
    		 blink(GPIOA_ODR, 7,t);
 80003d8:	4b0f      	ldr	r3, [pc, #60]	; (8000418 <main+0x158>)
 80003da:	681b      	ldr	r3, [r3, #0]
 80003dc:	461a      	mov	r2, r3
 80003de:	2107      	movs	r1, #7
 80003e0:	4810      	ldr	r0, [pc, #64]	; (8000424 <main+0x164>)
 80003e2:	f000 f87f 	bl	80004e4 <blink>
    		 blink(GPIOA_ODR, 6,t);
 80003e6:	4b0c      	ldr	r3, [pc, #48]	; (8000418 <main+0x158>)
 80003e8:	681b      	ldr	r3, [r3, #0]
 80003ea:	461a      	mov	r2, r3
 80003ec:	2106      	movs	r1, #6
 80003ee:	480d      	ldr	r0, [pc, #52]	; (8000424 <main+0x164>)
 80003f0:	f000 f878 	bl	80004e4 <blink>
    		 blink(GPIOA_ODR, 5,t);
 80003f4:	4b08      	ldr	r3, [pc, #32]	; (8000418 <main+0x158>)
 80003f6:	681b      	ldr	r3, [r3, #0]
 80003f8:	461a      	mov	r2, r3
 80003fa:	2105      	movs	r1, #5
 80003fc:	4809      	ldr	r0, [pc, #36]	; (8000424 <main+0x164>)
 80003fe:	f000 f871 	bl	80004e4 <blink>
    	 if (getbit(*GPIOA_IDR, 4) == 0)
 8000402:	e78a      	b.n	800031a <main+0x5a>
 8000404:	080016a4 	.word	0x080016a4
 8000408:	40023830 	.word	0x40023830
 800040c:	40020000 	.word	0x40020000
 8000410:	40020400 	.word	0x40020400
 8000414:	080016b4 	.word	0x080016b4
 8000418:	20000090 	.word	0x20000090
 800041c:	40020010 	.word	0x40020010
 8000420:	080016c0 	.word	0x080016c0
 8000424:	40020014 	.word	0x40020014
 8000428:	40020414 	.word	0x40020414

0800042c <systick_handler>:
   D4 - enable clock for GPIOB in RCC_APB1ENR
      - check address of GPIOB, resp. GPIOB_MODER a GPIOB_ODR
      - set/reset 6th bit of GPIOB_ODR
 */

void systick_handler(void) {
 800042c:	b580      	push	{r7, lr}
 800042e:	af00      	add	r7, sp, #0
	printf("seconds = %lu\n", seconds++);
 8000430:	4b08      	ldr	r3, [pc, #32]	; (8000454 <systick_handler+0x28>)
 8000432:	681b      	ldr	r3, [r3, #0]
 8000434:	1c5a      	adds	r2, r3, #1
 8000436:	4907      	ldr	r1, [pc, #28]	; (8000454 <systick_handler+0x28>)
 8000438:	600a      	str	r2, [r1, #0]
 800043a:	4619      	mov	r1, r3
 800043c:	4806      	ldr	r0, [pc, #24]	; (8000458 <systick_handler+0x2c>)
 800043e:	f000 f9dd 	bl	80007fc <iprintf>
	togglebit(*GPIOA_ODR, 6);
 8000442:	4b06      	ldr	r3, [pc, #24]	; (800045c <systick_handler+0x30>)
 8000444:	681b      	ldr	r3, [r3, #0]
 8000446:	4a05      	ldr	r2, [pc, #20]	; (800045c <systick_handler+0x30>)
 8000448:	f083 0340 	eor.w	r3, r3, #64	; 0x40
 800044c:	6013      	str	r3, [r2, #0]
}
 800044e:	bf00      	nop
 8000450:	bd80      	pop	{r7, pc}
 8000452:	bf00      	nop
 8000454:	20000080 	.word	0x20000080
 8000458:	080016d0 	.word	0x080016d0
 800045c:	40020014 	.word	0x40020014

08000460 <init_systick>:

void init_systick(unsigned long s, unsigned char en)
{
 8000460:	b480      	push	{r7}
 8000462:	b083      	sub	sp, #12
 8000464:	af00      	add	r7, sp, #0
 8000466:	6078      	str	r0, [r7, #4]
 8000468:	460b      	mov	r3, r1
 800046a:	70fb      	strb	r3, [r7, #3]
	// Systick - 24b counter - 8388608
	// Main clock source is running with HSI by default which is at 16 Mhz.
	// SysTick clock source can be set with CTRL register (Bit 2)
	// 0: AHB/8 -> (2 MHz)
	// 1: Processor clock (AHB) -> (16 MHz)
	SYSTICK->CTRL |= 0x00000; // Currently set to run at 2 Mhz -> 5e-7s
 800046c:	4b0e      	ldr	r3, [pc, #56]	; (80004a8 <init_systick+0x48>)
 800046e:	4a0e      	ldr	r2, [pc, #56]	; (80004a8 <init_systick+0x48>)
 8000470:	681b      	ldr	r3, [r3, #0]
 8000472:	6013      	str	r3, [r2, #0]
	// Enable callback
	SYSTICK->CTRL |= (en << 1); // if argument 'en' is 1, then interrupt is enabled
 8000474:	4b0c      	ldr	r3, [pc, #48]	; (80004a8 <init_systick+0x48>)
 8000476:	681b      	ldr	r3, [r3, #0]
 8000478:	78fa      	ldrb	r2, [r7, #3]
 800047a:	0052      	lsls	r2, r2, #1
 800047c:	4611      	mov	r1, r2
 800047e:	4a0a      	ldr	r2, [pc, #40]	; (80004a8 <init_systick+0x48>)
 8000480:	430b      	orrs	r3, r1
 8000482:	6013      	str	r3, [r2, #0]
	// Load the reload value
	SYSTICK->LOAD = s;
 8000484:	4a08      	ldr	r2, [pc, #32]	; (80004a8 <init_systick+0x48>)
 8000486:	687b      	ldr	r3, [r7, #4]
 8000488:	6053      	str	r3, [r2, #4]
	// Set the current value to 0
	SYSTICK->VAL = 0;
 800048a:	4b07      	ldr	r3, [pc, #28]	; (80004a8 <init_systick+0x48>)
 800048c:	2200      	movs	r2, #0
 800048e:	609a      	str	r2, [r3, #8]
	// Enable SysTick
	SYSTICK->CTRL |= (1 << 0);		// setbit(SYSTICK->CTRL, 1)
 8000490:	4b05      	ldr	r3, [pc, #20]	; (80004a8 <init_systick+0x48>)
 8000492:	681b      	ldr	r3, [r3, #0]
 8000494:	4a04      	ldr	r2, [pc, #16]	; (80004a8 <init_systick+0x48>)
 8000496:	f043 0301 	orr.w	r3, r3, #1
 800049a:	6013      	str	r3, [r2, #0]
}
 800049c:	bf00      	nop
 800049e:	370c      	adds	r7, #12
 80004a0:	46bd      	mov	sp, r7
 80004a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004a6:	4770      	bx	lr
 80004a8:	e000e010 	.word	0xe000e010

080004ac <delay_ms>:
 * Millisecond delay function.
 *   volatile keyword is used so that compiler does not optimize it away
 * Polling method (If interrupt is not enabled)
 */
void delay_ms(volatile unsigned long s)
{
 80004ac:	b480      	push	{r7}
 80004ae:	b083      	sub	sp, #12
 80004b0:	af00      	add	r7, sp, #0
 80004b2:	6078      	str	r0, [r7, #4]
	for(s; s>0; s--){
 80004b4:	687b      	ldr	r3, [r7, #4]
 80004b6:	e009      	b.n	80004cc <delay_ms+0x20>
		while(!(SYSTICK->CTRL & (1 << 16))); // Wait until COUNTFLAG is 1
 80004b8:	bf00      	nop
 80004ba:	4b09      	ldr	r3, [pc, #36]	; (80004e0 <delay_ms+0x34>)
 80004bc:	681b      	ldr	r3, [r3, #0]
 80004be:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80004c2:	2b00      	cmp	r3, #0
 80004c4:	d0f9      	beq.n	80004ba <delay_ms+0xe>
	for(s; s>0; s--){
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	3b01      	subs	r3, #1
 80004ca:	607b      	str	r3, [r7, #4]
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	2b00      	cmp	r3, #0
 80004d0:	d1f2      	bne.n	80004b8 <delay_ms+0xc>
	}
}
 80004d2:	bf00      	nop
 80004d4:	370c      	adds	r7, #12
 80004d6:	46bd      	mov	sp, r7
 80004d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004dc:	4770      	bx	lr
 80004de:	bf00      	nop
 80004e0:	e000e010 	.word	0xe000e010

080004e4 <blink>:

void blink(unsigned long* s, uint8_t u, int tempo)
{
 80004e4:	b580      	push	{r7, lr}
 80004e6:	b084      	sub	sp, #16
 80004e8:	af00      	add	r7, sp, #0
 80004ea:	60f8      	str	r0, [r7, #12]
 80004ec:	460b      	mov	r3, r1
 80004ee:	607a      	str	r2, [r7, #4]
 80004f0:	72fb      	strb	r3, [r7, #11]
	clearbit(*s, u);
 80004f2:	68fb      	ldr	r3, [r7, #12]
 80004f4:	681a      	ldr	r2, [r3, #0]
 80004f6:	7afb      	ldrb	r3, [r7, #11]
 80004f8:	2101      	movs	r1, #1
 80004fa:	fa01 f303 	lsl.w	r3, r1, r3
 80004fe:	43db      	mvns	r3, r3
 8000500:	401a      	ands	r2, r3
 8000502:	68fb      	ldr	r3, [r7, #12]
 8000504:	601a      	str	r2, [r3, #0]
	delay_ms(tempo);
 8000506:	687b      	ldr	r3, [r7, #4]
 8000508:	4618      	mov	r0, r3
 800050a:	f7ff ffcf 	bl	80004ac <delay_ms>
	setbit(*s, u);
 800050e:	68fb      	ldr	r3, [r7, #12]
 8000510:	681a      	ldr	r2, [r3, #0]
 8000512:	7afb      	ldrb	r3, [r7, #11]
 8000514:	2101      	movs	r1, #1
 8000516:	fa01 f303 	lsl.w	r3, r1, r3
 800051a:	431a      	orrs	r2, r3
 800051c:	68fb      	ldr	r3, [r7, #12]
 800051e:	601a      	str	r2, [r3, #0]
	delay_ms(tempo);
 8000520:	687b      	ldr	r3, [r7, #4]
 8000522:	4618      	mov	r0, r3
 8000524:	f7ff ffc2 	bl	80004ac <delay_ms>
}
 8000528:	bf00      	nop
 800052a:	3710      	adds	r7, #16
 800052c:	46bd      	mov	sp, r7
 800052e:	bd80      	pop	{r7, pc}

08000530 <blink2>:

void blink2(unsigned long* s, unsigned long* s2, uint8_t u,uint8_t u2, int tempo)
{
 8000530:	b580      	push	{r7, lr}
 8000532:	b084      	sub	sp, #16
 8000534:	af00      	add	r7, sp, #0
 8000536:	60f8      	str	r0, [r7, #12]
 8000538:	60b9      	str	r1, [r7, #8]
 800053a:	4611      	mov	r1, r2
 800053c:	461a      	mov	r2, r3
 800053e:	460b      	mov	r3, r1
 8000540:	71fb      	strb	r3, [r7, #7]
 8000542:	4613      	mov	r3, r2
 8000544:	71bb      	strb	r3, [r7, #6]
	clearbit(*s, u);
 8000546:	68fb      	ldr	r3, [r7, #12]
 8000548:	681a      	ldr	r2, [r3, #0]
 800054a:	79fb      	ldrb	r3, [r7, #7]
 800054c:	2101      	movs	r1, #1
 800054e:	fa01 f303 	lsl.w	r3, r1, r3
 8000552:	43db      	mvns	r3, r3
 8000554:	401a      	ands	r2, r3
 8000556:	68fb      	ldr	r3, [r7, #12]
 8000558:	601a      	str	r2, [r3, #0]
	clearbit(*s2, u2);
 800055a:	68bb      	ldr	r3, [r7, #8]
 800055c:	681a      	ldr	r2, [r3, #0]
 800055e:	79bb      	ldrb	r3, [r7, #6]
 8000560:	2101      	movs	r1, #1
 8000562:	fa01 f303 	lsl.w	r3, r1, r3
 8000566:	43db      	mvns	r3, r3
 8000568:	401a      	ands	r2, r3
 800056a:	68bb      	ldr	r3, [r7, #8]
 800056c:	601a      	str	r2, [r3, #0]
	delay_ms(tempo);
 800056e:	69bb      	ldr	r3, [r7, #24]
 8000570:	4618      	mov	r0, r3
 8000572:	f7ff ff9b 	bl	80004ac <delay_ms>
	setbit(*s, u);
 8000576:	68fb      	ldr	r3, [r7, #12]
 8000578:	681a      	ldr	r2, [r3, #0]
 800057a:	79fb      	ldrb	r3, [r7, #7]
 800057c:	2101      	movs	r1, #1
 800057e:	fa01 f303 	lsl.w	r3, r1, r3
 8000582:	431a      	orrs	r2, r3
 8000584:	68fb      	ldr	r3, [r7, #12]
 8000586:	601a      	str	r2, [r3, #0]
	setbit(*s2, u2);
 8000588:	68bb      	ldr	r3, [r7, #8]
 800058a:	681a      	ldr	r2, [r3, #0]
 800058c:	79bb      	ldrb	r3, [r7, #6]
 800058e:	2101      	movs	r1, #1
 8000590:	fa01 f303 	lsl.w	r3, r1, r3
 8000594:	431a      	orrs	r2, r3
 8000596:	68bb      	ldr	r3, [r7, #8]
 8000598:	601a      	str	r2, [r3, #0]
	delay_ms(tempo);
 800059a:	69bb      	ldr	r3, [r7, #24]
 800059c:	4618      	mov	r0, r3
 800059e:	f7ff ff85 	bl	80004ac <delay_ms>
}
 80005a2:	bf00      	nop
 80005a4:	3710      	adds	r7, #16
 80005a6:	46bd      	mov	sp, r7
 80005a8:	bd80      	pop	{r7, pc}
	...

080005ac <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0     *((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN           *((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80005ac:	b480      	push	{r7}
 80005ae:	b083      	sub	sp, #12
 80005b0:	af00      	add	r7, sp, #0
 80005b2:	4603      	mov	r3, r0
 80005b4:	71fb      	strb	r3, [r7, #7]
    //Enable TRCENA
    DEMCR |= ( 1 << 24);
 80005b6:	4b0f      	ldr	r3, [pc, #60]	; (80005f4 <ITM_SendChar+0x48>)
 80005b8:	681b      	ldr	r3, [r3, #0]
 80005ba:	4a0e      	ldr	r2, [pc, #56]	; (80005f4 <ITM_SendChar+0x48>)
 80005bc:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80005c0:	6013      	str	r3, [r2, #0]

    //enable stimulus port 0
    ITM_TRACE_EN |= ( 1 << 0);
 80005c2:	4b0d      	ldr	r3, [pc, #52]	; (80005f8 <ITM_SendChar+0x4c>)
 80005c4:	681b      	ldr	r3, [r3, #0]
 80005c6:	4a0c      	ldr	r2, [pc, #48]	; (80005f8 <ITM_SendChar+0x4c>)
 80005c8:	f043 0301 	orr.w	r3, r3, #1
 80005cc:	6013      	str	r3, [r2, #0]

    // read FIFO status in bit [0]:
    while(!(ITM_STIMULUS_PORT0 & 1));
 80005ce:	bf00      	nop
 80005d0:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80005d4:	681b      	ldr	r3, [r3, #0]
 80005d6:	f003 0301 	and.w	r3, r3, #1
 80005da:	2b00      	cmp	r3, #0
 80005dc:	d0f8      	beq.n	80005d0 <ITM_SendChar+0x24>

    //Write to ITM stimulus port0
    ITM_STIMULUS_PORT0 = ch;
 80005de:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80005e2:	79fb      	ldrb	r3, [r7, #7]
 80005e4:	6013      	str	r3, [r2, #0]
}
 80005e6:	bf00      	nop
 80005e8:	370c      	adds	r7, #12
 80005ea:	46bd      	mov	sp, r7
 80005ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005f0:	4770      	bx	lr
 80005f2:	bf00      	nop
 80005f4:	e000edfc 	.word	0xe000edfc
 80005f8:	e0000e00 	.word	0xe0000e00

080005fc <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80005fc:	b580      	push	{r7, lr}
 80005fe:	b086      	sub	sp, #24
 8000600:	af00      	add	r7, sp, #0
 8000602:	60f8      	str	r0, [r7, #12]
 8000604:	60b9      	str	r1, [r7, #8]
 8000606:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000608:	2300      	movs	r3, #0
 800060a:	617b      	str	r3, [r7, #20]
 800060c:	e00a      	b.n	8000624 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800060e:	f3af 8000 	nop.w
 8000612:	4601      	mov	r1, r0
 8000614:	68bb      	ldr	r3, [r7, #8]
 8000616:	1c5a      	adds	r2, r3, #1
 8000618:	60ba      	str	r2, [r7, #8]
 800061a:	b2ca      	uxtb	r2, r1
 800061c:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800061e:	697b      	ldr	r3, [r7, #20]
 8000620:	3301      	adds	r3, #1
 8000622:	617b      	str	r3, [r7, #20]
 8000624:	697a      	ldr	r2, [r7, #20]
 8000626:	687b      	ldr	r3, [r7, #4]
 8000628:	429a      	cmp	r2, r3
 800062a:	dbf0      	blt.n	800060e <_read+0x12>
	}

return len;
 800062c:	687b      	ldr	r3, [r7, #4]
}
 800062e:	4618      	mov	r0, r3
 8000630:	3718      	adds	r7, #24
 8000632:	46bd      	mov	sp, r7
 8000634:	bd80      	pop	{r7, pc}

08000636 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000636:	b580      	push	{r7, lr}
 8000638:	b086      	sub	sp, #24
 800063a:	af00      	add	r7, sp, #0
 800063c:	60f8      	str	r0, [r7, #12]
 800063e:	60b9      	str	r1, [r7, #8]
 8000640:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000642:	2300      	movs	r3, #0
 8000644:	617b      	str	r3, [r7, #20]
 8000646:	e009      	b.n	800065c <_write+0x26>
	{
		// __io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 8000648:	68bb      	ldr	r3, [r7, #8]
 800064a:	1c5a      	adds	r2, r3, #1
 800064c:	60ba      	str	r2, [r7, #8]
 800064e:	781b      	ldrb	r3, [r3, #0]
 8000650:	4618      	mov	r0, r3
 8000652:	f7ff ffab 	bl	80005ac <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000656:	697b      	ldr	r3, [r7, #20]
 8000658:	3301      	adds	r3, #1
 800065a:	617b      	str	r3, [r7, #20]
 800065c:	697a      	ldr	r2, [r7, #20]
 800065e:	687b      	ldr	r3, [r7, #4]
 8000660:	429a      	cmp	r2, r3
 8000662:	dbf1      	blt.n	8000648 <_write+0x12>
	}
	return len;
 8000664:	687b      	ldr	r3, [r7, #4]
}
 8000666:	4618      	mov	r0, r3
 8000668:	3718      	adds	r7, #24
 800066a:	46bd      	mov	sp, r7
 800066c:	bd80      	pop	{r7, pc}

0800066e <_close>:

int _close(int file)
{
 800066e:	b480      	push	{r7}
 8000670:	b083      	sub	sp, #12
 8000672:	af00      	add	r7, sp, #0
 8000674:	6078      	str	r0, [r7, #4]
	return -1;
 8000676:	f04f 33ff 	mov.w	r3, #4294967295
}
 800067a:	4618      	mov	r0, r3
 800067c:	370c      	adds	r7, #12
 800067e:	46bd      	mov	sp, r7
 8000680:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000684:	4770      	bx	lr

08000686 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000686:	b480      	push	{r7}
 8000688:	b083      	sub	sp, #12
 800068a:	af00      	add	r7, sp, #0
 800068c:	6078      	str	r0, [r7, #4]
 800068e:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000690:	683b      	ldr	r3, [r7, #0]
 8000692:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000696:	605a      	str	r2, [r3, #4]
	return 0;
 8000698:	2300      	movs	r3, #0
}
 800069a:	4618      	mov	r0, r3
 800069c:	370c      	adds	r7, #12
 800069e:	46bd      	mov	sp, r7
 80006a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006a4:	4770      	bx	lr

080006a6 <_isatty>:

int _isatty(int file)
{
 80006a6:	b480      	push	{r7}
 80006a8:	b083      	sub	sp, #12
 80006aa:	af00      	add	r7, sp, #0
 80006ac:	6078      	str	r0, [r7, #4]
	return 1;
 80006ae:	2301      	movs	r3, #1
}
 80006b0:	4618      	mov	r0, r3
 80006b2:	370c      	adds	r7, #12
 80006b4:	46bd      	mov	sp, r7
 80006b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006ba:	4770      	bx	lr

080006bc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80006bc:	b480      	push	{r7}
 80006be:	b085      	sub	sp, #20
 80006c0:	af00      	add	r7, sp, #0
 80006c2:	60f8      	str	r0, [r7, #12]
 80006c4:	60b9      	str	r1, [r7, #8]
 80006c6:	607a      	str	r2, [r7, #4]
	return 0;
 80006c8:	2300      	movs	r3, #0
}
 80006ca:	4618      	mov	r0, r3
 80006cc:	3714      	adds	r7, #20
 80006ce:	46bd      	mov	sp, r7
 80006d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006d4:	4770      	bx	lr
	...

080006d8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80006d8:	b580      	push	{r7, lr}
 80006da:	b086      	sub	sp, #24
 80006dc:	af00      	add	r7, sp, #0
 80006de:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80006e0:	4a14      	ldr	r2, [pc, #80]	; (8000734 <_sbrk+0x5c>)
 80006e2:	4b15      	ldr	r3, [pc, #84]	; (8000738 <_sbrk+0x60>)
 80006e4:	1ad3      	subs	r3, r2, r3
 80006e6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80006e8:	697b      	ldr	r3, [r7, #20]
 80006ea:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initalize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80006ec:	4b13      	ldr	r3, [pc, #76]	; (800073c <_sbrk+0x64>)
 80006ee:	681b      	ldr	r3, [r3, #0]
 80006f0:	2b00      	cmp	r3, #0
 80006f2:	d102      	bne.n	80006fa <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80006f4:	4b11      	ldr	r3, [pc, #68]	; (800073c <_sbrk+0x64>)
 80006f6:	4a12      	ldr	r2, [pc, #72]	; (8000740 <_sbrk+0x68>)
 80006f8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80006fa:	4b10      	ldr	r3, [pc, #64]	; (800073c <_sbrk+0x64>)
 80006fc:	681a      	ldr	r2, [r3, #0]
 80006fe:	687b      	ldr	r3, [r7, #4]
 8000700:	4413      	add	r3, r2
 8000702:	693a      	ldr	r2, [r7, #16]
 8000704:	429a      	cmp	r2, r3
 8000706:	d207      	bcs.n	8000718 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000708:	f000 f846 	bl	8000798 <__errno>
 800070c:	4602      	mov	r2, r0
 800070e:	230c      	movs	r3, #12
 8000710:	6013      	str	r3, [r2, #0]
    return (void *)-1;
 8000712:	f04f 33ff 	mov.w	r3, #4294967295
 8000716:	e009      	b.n	800072c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000718:	4b08      	ldr	r3, [pc, #32]	; (800073c <_sbrk+0x64>)
 800071a:	681b      	ldr	r3, [r3, #0]
 800071c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800071e:	4b07      	ldr	r3, [pc, #28]	; (800073c <_sbrk+0x64>)
 8000720:	681a      	ldr	r2, [r3, #0]
 8000722:	687b      	ldr	r3, [r7, #4]
 8000724:	4413      	add	r3, r2
 8000726:	4a05      	ldr	r2, [pc, #20]	; (800073c <_sbrk+0x64>)
 8000728:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800072a:	68fb      	ldr	r3, [r7, #12]
}
 800072c:	4618      	mov	r0, r3
 800072e:	3718      	adds	r7, #24
 8000730:	46bd      	mov	sp, r7
 8000732:	bd80      	pop	{r7, pc}
 8000734:	20018000 	.word	0x20018000
 8000738:	00000400 	.word	0x00000400
 800073c:	20000084 	.word	0x20000084
 8000740:	20000098 	.word	0x20000098

08000744 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000744:	480d      	ldr	r0, [pc, #52]	; (800077c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000746:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000748:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800074c:	480c      	ldr	r0, [pc, #48]	; (8000780 <LoopForever+0x6>)
  ldr r1, =_edata
 800074e:	490d      	ldr	r1, [pc, #52]	; (8000784 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000750:	4a0d      	ldr	r2, [pc, #52]	; (8000788 <LoopForever+0xe>)
  movs r3, #0
 8000752:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000754:	e002      	b.n	800075c <LoopCopyDataInit>

08000756 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000756:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000758:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800075a:	3304      	adds	r3, #4

0800075c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800075c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800075e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000760:	d3f9      	bcc.n	8000756 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000762:	4a0a      	ldr	r2, [pc, #40]	; (800078c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000764:	4c0a      	ldr	r4, [pc, #40]	; (8000790 <LoopForever+0x16>)
  movs r3, #0
 8000766:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000768:	e001      	b.n	800076e <LoopFillZerobss>

0800076a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800076a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800076c:	3204      	adds	r2, #4

0800076e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800076e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000770:	d3fb      	bcc.n	800076a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000772:	f000 f817 	bl	80007a4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000776:	f7ff fda3 	bl	80002c0 <main>

0800077a <LoopForever>:

LoopForever:
    b LoopForever
 800077a:	e7fe      	b.n	800077a <LoopForever>
  ldr   r0, =_estack
 800077c:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000780:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000784:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000788:	08001780 	.word	0x08001780
  ldr r2, =_sbss
 800078c:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000790:	20000098 	.word	0x20000098

08000794 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000794:	e7fe      	b.n	8000794 <ADC_IRQHandler>
	...

08000798 <__errno>:
 8000798:	4b01      	ldr	r3, [pc, #4]	; (80007a0 <__errno+0x8>)
 800079a:	6818      	ldr	r0, [r3, #0]
 800079c:	4770      	bx	lr
 800079e:	bf00      	nop
 80007a0:	20000000 	.word	0x20000000

080007a4 <__libc_init_array>:
 80007a4:	b570      	push	{r4, r5, r6, lr}
 80007a6:	4e0d      	ldr	r6, [pc, #52]	; (80007dc <__libc_init_array+0x38>)
 80007a8:	4c0d      	ldr	r4, [pc, #52]	; (80007e0 <__libc_init_array+0x3c>)
 80007aa:	1ba4      	subs	r4, r4, r6
 80007ac:	10a4      	asrs	r4, r4, #2
 80007ae:	2500      	movs	r5, #0
 80007b0:	42a5      	cmp	r5, r4
 80007b2:	d109      	bne.n	80007c8 <__libc_init_array+0x24>
 80007b4:	4e0b      	ldr	r6, [pc, #44]	; (80007e4 <__libc_init_array+0x40>)
 80007b6:	4c0c      	ldr	r4, [pc, #48]	; (80007e8 <__libc_init_array+0x44>)
 80007b8:	f000 ff68 	bl	800168c <_init>
 80007bc:	1ba4      	subs	r4, r4, r6
 80007be:	10a4      	asrs	r4, r4, #2
 80007c0:	2500      	movs	r5, #0
 80007c2:	42a5      	cmp	r5, r4
 80007c4:	d105      	bne.n	80007d2 <__libc_init_array+0x2e>
 80007c6:	bd70      	pop	{r4, r5, r6, pc}
 80007c8:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80007cc:	4798      	blx	r3
 80007ce:	3501      	adds	r5, #1
 80007d0:	e7ee      	b.n	80007b0 <__libc_init_array+0xc>
 80007d2:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80007d6:	4798      	blx	r3
 80007d8:	3501      	adds	r5, #1
 80007da:	e7f2      	b.n	80007c2 <__libc_init_array+0x1e>
 80007dc:	08001778 	.word	0x08001778
 80007e0:	08001778 	.word	0x08001778
 80007e4:	08001778 	.word	0x08001778
 80007e8:	0800177c 	.word	0x0800177c

080007ec <memset>:
 80007ec:	4402      	add	r2, r0
 80007ee:	4603      	mov	r3, r0
 80007f0:	4293      	cmp	r3, r2
 80007f2:	d100      	bne.n	80007f6 <memset+0xa>
 80007f4:	4770      	bx	lr
 80007f6:	f803 1b01 	strb.w	r1, [r3], #1
 80007fa:	e7f9      	b.n	80007f0 <memset+0x4>

080007fc <iprintf>:
 80007fc:	b40f      	push	{r0, r1, r2, r3}
 80007fe:	4b0a      	ldr	r3, [pc, #40]	; (8000828 <iprintf+0x2c>)
 8000800:	b513      	push	{r0, r1, r4, lr}
 8000802:	681c      	ldr	r4, [r3, #0]
 8000804:	b124      	cbz	r4, 8000810 <iprintf+0x14>
 8000806:	69a3      	ldr	r3, [r4, #24]
 8000808:	b913      	cbnz	r3, 8000810 <iprintf+0x14>
 800080a:	4620      	mov	r0, r4
 800080c:	f000 fa22 	bl	8000c54 <__sinit>
 8000810:	ab05      	add	r3, sp, #20
 8000812:	9a04      	ldr	r2, [sp, #16]
 8000814:	68a1      	ldr	r1, [r4, #8]
 8000816:	9301      	str	r3, [sp, #4]
 8000818:	4620      	mov	r0, r4
 800081a:	f000 fbdb 	bl	8000fd4 <_vfiprintf_r>
 800081e:	b002      	add	sp, #8
 8000820:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000824:	b004      	add	sp, #16
 8000826:	4770      	bx	lr
 8000828:	20000000 	.word	0x20000000

0800082c <_puts_r>:
 800082c:	b570      	push	{r4, r5, r6, lr}
 800082e:	460e      	mov	r6, r1
 8000830:	4605      	mov	r5, r0
 8000832:	b118      	cbz	r0, 800083c <_puts_r+0x10>
 8000834:	6983      	ldr	r3, [r0, #24]
 8000836:	b90b      	cbnz	r3, 800083c <_puts_r+0x10>
 8000838:	f000 fa0c 	bl	8000c54 <__sinit>
 800083c:	69ab      	ldr	r3, [r5, #24]
 800083e:	68ac      	ldr	r4, [r5, #8]
 8000840:	b913      	cbnz	r3, 8000848 <_puts_r+0x1c>
 8000842:	4628      	mov	r0, r5
 8000844:	f000 fa06 	bl	8000c54 <__sinit>
 8000848:	4b23      	ldr	r3, [pc, #140]	; (80008d8 <_puts_r+0xac>)
 800084a:	429c      	cmp	r4, r3
 800084c:	d117      	bne.n	800087e <_puts_r+0x52>
 800084e:	686c      	ldr	r4, [r5, #4]
 8000850:	89a3      	ldrh	r3, [r4, #12]
 8000852:	071b      	lsls	r3, r3, #28
 8000854:	d51d      	bpl.n	8000892 <_puts_r+0x66>
 8000856:	6923      	ldr	r3, [r4, #16]
 8000858:	b1db      	cbz	r3, 8000892 <_puts_r+0x66>
 800085a:	3e01      	subs	r6, #1
 800085c:	68a3      	ldr	r3, [r4, #8]
 800085e:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000862:	3b01      	subs	r3, #1
 8000864:	60a3      	str	r3, [r4, #8]
 8000866:	b9e9      	cbnz	r1, 80008a4 <_puts_r+0x78>
 8000868:	2b00      	cmp	r3, #0
 800086a:	da2e      	bge.n	80008ca <_puts_r+0x9e>
 800086c:	4622      	mov	r2, r4
 800086e:	210a      	movs	r1, #10
 8000870:	4628      	mov	r0, r5
 8000872:	f000 f83f 	bl	80008f4 <__swbuf_r>
 8000876:	3001      	adds	r0, #1
 8000878:	d011      	beq.n	800089e <_puts_r+0x72>
 800087a:	200a      	movs	r0, #10
 800087c:	e011      	b.n	80008a2 <_puts_r+0x76>
 800087e:	4b17      	ldr	r3, [pc, #92]	; (80008dc <_puts_r+0xb0>)
 8000880:	429c      	cmp	r4, r3
 8000882:	d101      	bne.n	8000888 <_puts_r+0x5c>
 8000884:	68ac      	ldr	r4, [r5, #8]
 8000886:	e7e3      	b.n	8000850 <_puts_r+0x24>
 8000888:	4b15      	ldr	r3, [pc, #84]	; (80008e0 <_puts_r+0xb4>)
 800088a:	429c      	cmp	r4, r3
 800088c:	bf08      	it	eq
 800088e:	68ec      	ldreq	r4, [r5, #12]
 8000890:	e7de      	b.n	8000850 <_puts_r+0x24>
 8000892:	4621      	mov	r1, r4
 8000894:	4628      	mov	r0, r5
 8000896:	f000 f87f 	bl	8000998 <__swsetup_r>
 800089a:	2800      	cmp	r0, #0
 800089c:	d0dd      	beq.n	800085a <_puts_r+0x2e>
 800089e:	f04f 30ff 	mov.w	r0, #4294967295
 80008a2:	bd70      	pop	{r4, r5, r6, pc}
 80008a4:	2b00      	cmp	r3, #0
 80008a6:	da04      	bge.n	80008b2 <_puts_r+0x86>
 80008a8:	69a2      	ldr	r2, [r4, #24]
 80008aa:	429a      	cmp	r2, r3
 80008ac:	dc06      	bgt.n	80008bc <_puts_r+0x90>
 80008ae:	290a      	cmp	r1, #10
 80008b0:	d004      	beq.n	80008bc <_puts_r+0x90>
 80008b2:	6823      	ldr	r3, [r4, #0]
 80008b4:	1c5a      	adds	r2, r3, #1
 80008b6:	6022      	str	r2, [r4, #0]
 80008b8:	7019      	strb	r1, [r3, #0]
 80008ba:	e7cf      	b.n	800085c <_puts_r+0x30>
 80008bc:	4622      	mov	r2, r4
 80008be:	4628      	mov	r0, r5
 80008c0:	f000 f818 	bl	80008f4 <__swbuf_r>
 80008c4:	3001      	adds	r0, #1
 80008c6:	d1c9      	bne.n	800085c <_puts_r+0x30>
 80008c8:	e7e9      	b.n	800089e <_puts_r+0x72>
 80008ca:	6823      	ldr	r3, [r4, #0]
 80008cc:	200a      	movs	r0, #10
 80008ce:	1c5a      	adds	r2, r3, #1
 80008d0:	6022      	str	r2, [r4, #0]
 80008d2:	7018      	strb	r0, [r3, #0]
 80008d4:	e7e5      	b.n	80008a2 <_puts_r+0x76>
 80008d6:	bf00      	nop
 80008d8:	08001704 	.word	0x08001704
 80008dc:	08001724 	.word	0x08001724
 80008e0:	080016e4 	.word	0x080016e4

080008e4 <puts>:
 80008e4:	4b02      	ldr	r3, [pc, #8]	; (80008f0 <puts+0xc>)
 80008e6:	4601      	mov	r1, r0
 80008e8:	6818      	ldr	r0, [r3, #0]
 80008ea:	f7ff bf9f 	b.w	800082c <_puts_r>
 80008ee:	bf00      	nop
 80008f0:	20000000 	.word	0x20000000

080008f4 <__swbuf_r>:
 80008f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008f6:	460e      	mov	r6, r1
 80008f8:	4614      	mov	r4, r2
 80008fa:	4605      	mov	r5, r0
 80008fc:	b118      	cbz	r0, 8000906 <__swbuf_r+0x12>
 80008fe:	6983      	ldr	r3, [r0, #24]
 8000900:	b90b      	cbnz	r3, 8000906 <__swbuf_r+0x12>
 8000902:	f000 f9a7 	bl	8000c54 <__sinit>
 8000906:	4b21      	ldr	r3, [pc, #132]	; (800098c <__swbuf_r+0x98>)
 8000908:	429c      	cmp	r4, r3
 800090a:	d12a      	bne.n	8000962 <__swbuf_r+0x6e>
 800090c:	686c      	ldr	r4, [r5, #4]
 800090e:	69a3      	ldr	r3, [r4, #24]
 8000910:	60a3      	str	r3, [r4, #8]
 8000912:	89a3      	ldrh	r3, [r4, #12]
 8000914:	071a      	lsls	r2, r3, #28
 8000916:	d52e      	bpl.n	8000976 <__swbuf_r+0x82>
 8000918:	6923      	ldr	r3, [r4, #16]
 800091a:	b363      	cbz	r3, 8000976 <__swbuf_r+0x82>
 800091c:	6923      	ldr	r3, [r4, #16]
 800091e:	6820      	ldr	r0, [r4, #0]
 8000920:	1ac0      	subs	r0, r0, r3
 8000922:	6963      	ldr	r3, [r4, #20]
 8000924:	b2f6      	uxtb	r6, r6
 8000926:	4283      	cmp	r3, r0
 8000928:	4637      	mov	r7, r6
 800092a:	dc04      	bgt.n	8000936 <__swbuf_r+0x42>
 800092c:	4621      	mov	r1, r4
 800092e:	4628      	mov	r0, r5
 8000930:	f000 f926 	bl	8000b80 <_fflush_r>
 8000934:	bb28      	cbnz	r0, 8000982 <__swbuf_r+0x8e>
 8000936:	68a3      	ldr	r3, [r4, #8]
 8000938:	3b01      	subs	r3, #1
 800093a:	60a3      	str	r3, [r4, #8]
 800093c:	6823      	ldr	r3, [r4, #0]
 800093e:	1c5a      	adds	r2, r3, #1
 8000940:	6022      	str	r2, [r4, #0]
 8000942:	701e      	strb	r6, [r3, #0]
 8000944:	6963      	ldr	r3, [r4, #20]
 8000946:	3001      	adds	r0, #1
 8000948:	4283      	cmp	r3, r0
 800094a:	d004      	beq.n	8000956 <__swbuf_r+0x62>
 800094c:	89a3      	ldrh	r3, [r4, #12]
 800094e:	07db      	lsls	r3, r3, #31
 8000950:	d519      	bpl.n	8000986 <__swbuf_r+0x92>
 8000952:	2e0a      	cmp	r6, #10
 8000954:	d117      	bne.n	8000986 <__swbuf_r+0x92>
 8000956:	4621      	mov	r1, r4
 8000958:	4628      	mov	r0, r5
 800095a:	f000 f911 	bl	8000b80 <_fflush_r>
 800095e:	b190      	cbz	r0, 8000986 <__swbuf_r+0x92>
 8000960:	e00f      	b.n	8000982 <__swbuf_r+0x8e>
 8000962:	4b0b      	ldr	r3, [pc, #44]	; (8000990 <__swbuf_r+0x9c>)
 8000964:	429c      	cmp	r4, r3
 8000966:	d101      	bne.n	800096c <__swbuf_r+0x78>
 8000968:	68ac      	ldr	r4, [r5, #8]
 800096a:	e7d0      	b.n	800090e <__swbuf_r+0x1a>
 800096c:	4b09      	ldr	r3, [pc, #36]	; (8000994 <__swbuf_r+0xa0>)
 800096e:	429c      	cmp	r4, r3
 8000970:	bf08      	it	eq
 8000972:	68ec      	ldreq	r4, [r5, #12]
 8000974:	e7cb      	b.n	800090e <__swbuf_r+0x1a>
 8000976:	4621      	mov	r1, r4
 8000978:	4628      	mov	r0, r5
 800097a:	f000 f80d 	bl	8000998 <__swsetup_r>
 800097e:	2800      	cmp	r0, #0
 8000980:	d0cc      	beq.n	800091c <__swbuf_r+0x28>
 8000982:	f04f 37ff 	mov.w	r7, #4294967295
 8000986:	4638      	mov	r0, r7
 8000988:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800098a:	bf00      	nop
 800098c:	08001704 	.word	0x08001704
 8000990:	08001724 	.word	0x08001724
 8000994:	080016e4 	.word	0x080016e4

08000998 <__swsetup_r>:
 8000998:	4b32      	ldr	r3, [pc, #200]	; (8000a64 <__swsetup_r+0xcc>)
 800099a:	b570      	push	{r4, r5, r6, lr}
 800099c:	681d      	ldr	r5, [r3, #0]
 800099e:	4606      	mov	r6, r0
 80009a0:	460c      	mov	r4, r1
 80009a2:	b125      	cbz	r5, 80009ae <__swsetup_r+0x16>
 80009a4:	69ab      	ldr	r3, [r5, #24]
 80009a6:	b913      	cbnz	r3, 80009ae <__swsetup_r+0x16>
 80009a8:	4628      	mov	r0, r5
 80009aa:	f000 f953 	bl	8000c54 <__sinit>
 80009ae:	4b2e      	ldr	r3, [pc, #184]	; (8000a68 <__swsetup_r+0xd0>)
 80009b0:	429c      	cmp	r4, r3
 80009b2:	d10f      	bne.n	80009d4 <__swsetup_r+0x3c>
 80009b4:	686c      	ldr	r4, [r5, #4]
 80009b6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80009ba:	b29a      	uxth	r2, r3
 80009bc:	0715      	lsls	r5, r2, #28
 80009be:	d42c      	bmi.n	8000a1a <__swsetup_r+0x82>
 80009c0:	06d0      	lsls	r0, r2, #27
 80009c2:	d411      	bmi.n	80009e8 <__swsetup_r+0x50>
 80009c4:	2209      	movs	r2, #9
 80009c6:	6032      	str	r2, [r6, #0]
 80009c8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80009cc:	81a3      	strh	r3, [r4, #12]
 80009ce:	f04f 30ff 	mov.w	r0, #4294967295
 80009d2:	e03e      	b.n	8000a52 <__swsetup_r+0xba>
 80009d4:	4b25      	ldr	r3, [pc, #148]	; (8000a6c <__swsetup_r+0xd4>)
 80009d6:	429c      	cmp	r4, r3
 80009d8:	d101      	bne.n	80009de <__swsetup_r+0x46>
 80009da:	68ac      	ldr	r4, [r5, #8]
 80009dc:	e7eb      	b.n	80009b6 <__swsetup_r+0x1e>
 80009de:	4b24      	ldr	r3, [pc, #144]	; (8000a70 <__swsetup_r+0xd8>)
 80009e0:	429c      	cmp	r4, r3
 80009e2:	bf08      	it	eq
 80009e4:	68ec      	ldreq	r4, [r5, #12]
 80009e6:	e7e6      	b.n	80009b6 <__swsetup_r+0x1e>
 80009e8:	0751      	lsls	r1, r2, #29
 80009ea:	d512      	bpl.n	8000a12 <__swsetup_r+0x7a>
 80009ec:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80009ee:	b141      	cbz	r1, 8000a02 <__swsetup_r+0x6a>
 80009f0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80009f4:	4299      	cmp	r1, r3
 80009f6:	d002      	beq.n	80009fe <__swsetup_r+0x66>
 80009f8:	4630      	mov	r0, r6
 80009fa:	f000 fa19 	bl	8000e30 <_free_r>
 80009fe:	2300      	movs	r3, #0
 8000a00:	6363      	str	r3, [r4, #52]	; 0x34
 8000a02:	89a3      	ldrh	r3, [r4, #12]
 8000a04:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000a08:	81a3      	strh	r3, [r4, #12]
 8000a0a:	2300      	movs	r3, #0
 8000a0c:	6063      	str	r3, [r4, #4]
 8000a0e:	6923      	ldr	r3, [r4, #16]
 8000a10:	6023      	str	r3, [r4, #0]
 8000a12:	89a3      	ldrh	r3, [r4, #12]
 8000a14:	f043 0308 	orr.w	r3, r3, #8
 8000a18:	81a3      	strh	r3, [r4, #12]
 8000a1a:	6923      	ldr	r3, [r4, #16]
 8000a1c:	b94b      	cbnz	r3, 8000a32 <__swsetup_r+0x9a>
 8000a1e:	89a3      	ldrh	r3, [r4, #12]
 8000a20:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000a24:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000a28:	d003      	beq.n	8000a32 <__swsetup_r+0x9a>
 8000a2a:	4621      	mov	r1, r4
 8000a2c:	4630      	mov	r0, r6
 8000a2e:	f000 f9bf 	bl	8000db0 <__smakebuf_r>
 8000a32:	89a2      	ldrh	r2, [r4, #12]
 8000a34:	f012 0301 	ands.w	r3, r2, #1
 8000a38:	d00c      	beq.n	8000a54 <__swsetup_r+0xbc>
 8000a3a:	2300      	movs	r3, #0
 8000a3c:	60a3      	str	r3, [r4, #8]
 8000a3e:	6963      	ldr	r3, [r4, #20]
 8000a40:	425b      	negs	r3, r3
 8000a42:	61a3      	str	r3, [r4, #24]
 8000a44:	6923      	ldr	r3, [r4, #16]
 8000a46:	b953      	cbnz	r3, 8000a5e <__swsetup_r+0xc6>
 8000a48:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a4c:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8000a50:	d1ba      	bne.n	80009c8 <__swsetup_r+0x30>
 8000a52:	bd70      	pop	{r4, r5, r6, pc}
 8000a54:	0792      	lsls	r2, r2, #30
 8000a56:	bf58      	it	pl
 8000a58:	6963      	ldrpl	r3, [r4, #20]
 8000a5a:	60a3      	str	r3, [r4, #8]
 8000a5c:	e7f2      	b.n	8000a44 <__swsetup_r+0xac>
 8000a5e:	2000      	movs	r0, #0
 8000a60:	e7f7      	b.n	8000a52 <__swsetup_r+0xba>
 8000a62:	bf00      	nop
 8000a64:	20000000 	.word	0x20000000
 8000a68:	08001704 	.word	0x08001704
 8000a6c:	08001724 	.word	0x08001724
 8000a70:	080016e4 	.word	0x080016e4

08000a74 <__sflush_r>:
 8000a74:	898a      	ldrh	r2, [r1, #12]
 8000a76:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000a7a:	4605      	mov	r5, r0
 8000a7c:	0710      	lsls	r0, r2, #28
 8000a7e:	460c      	mov	r4, r1
 8000a80:	d458      	bmi.n	8000b34 <__sflush_r+0xc0>
 8000a82:	684b      	ldr	r3, [r1, #4]
 8000a84:	2b00      	cmp	r3, #0
 8000a86:	dc05      	bgt.n	8000a94 <__sflush_r+0x20>
 8000a88:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000a8a:	2b00      	cmp	r3, #0
 8000a8c:	dc02      	bgt.n	8000a94 <__sflush_r+0x20>
 8000a8e:	2000      	movs	r0, #0
 8000a90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000a94:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000a96:	2e00      	cmp	r6, #0
 8000a98:	d0f9      	beq.n	8000a8e <__sflush_r+0x1a>
 8000a9a:	2300      	movs	r3, #0
 8000a9c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000aa0:	682f      	ldr	r7, [r5, #0]
 8000aa2:	6a21      	ldr	r1, [r4, #32]
 8000aa4:	602b      	str	r3, [r5, #0]
 8000aa6:	d032      	beq.n	8000b0e <__sflush_r+0x9a>
 8000aa8:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000aaa:	89a3      	ldrh	r3, [r4, #12]
 8000aac:	075a      	lsls	r2, r3, #29
 8000aae:	d505      	bpl.n	8000abc <__sflush_r+0x48>
 8000ab0:	6863      	ldr	r3, [r4, #4]
 8000ab2:	1ac0      	subs	r0, r0, r3
 8000ab4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000ab6:	b10b      	cbz	r3, 8000abc <__sflush_r+0x48>
 8000ab8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000aba:	1ac0      	subs	r0, r0, r3
 8000abc:	2300      	movs	r3, #0
 8000abe:	4602      	mov	r2, r0
 8000ac0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000ac2:	6a21      	ldr	r1, [r4, #32]
 8000ac4:	4628      	mov	r0, r5
 8000ac6:	47b0      	blx	r6
 8000ac8:	1c43      	adds	r3, r0, #1
 8000aca:	89a3      	ldrh	r3, [r4, #12]
 8000acc:	d106      	bne.n	8000adc <__sflush_r+0x68>
 8000ace:	6829      	ldr	r1, [r5, #0]
 8000ad0:	291d      	cmp	r1, #29
 8000ad2:	d848      	bhi.n	8000b66 <__sflush_r+0xf2>
 8000ad4:	4a29      	ldr	r2, [pc, #164]	; (8000b7c <__sflush_r+0x108>)
 8000ad6:	40ca      	lsrs	r2, r1
 8000ad8:	07d6      	lsls	r6, r2, #31
 8000ada:	d544      	bpl.n	8000b66 <__sflush_r+0xf2>
 8000adc:	2200      	movs	r2, #0
 8000ade:	6062      	str	r2, [r4, #4]
 8000ae0:	04d9      	lsls	r1, r3, #19
 8000ae2:	6922      	ldr	r2, [r4, #16]
 8000ae4:	6022      	str	r2, [r4, #0]
 8000ae6:	d504      	bpl.n	8000af2 <__sflush_r+0x7e>
 8000ae8:	1c42      	adds	r2, r0, #1
 8000aea:	d101      	bne.n	8000af0 <__sflush_r+0x7c>
 8000aec:	682b      	ldr	r3, [r5, #0]
 8000aee:	b903      	cbnz	r3, 8000af2 <__sflush_r+0x7e>
 8000af0:	6560      	str	r0, [r4, #84]	; 0x54
 8000af2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000af4:	602f      	str	r7, [r5, #0]
 8000af6:	2900      	cmp	r1, #0
 8000af8:	d0c9      	beq.n	8000a8e <__sflush_r+0x1a>
 8000afa:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000afe:	4299      	cmp	r1, r3
 8000b00:	d002      	beq.n	8000b08 <__sflush_r+0x94>
 8000b02:	4628      	mov	r0, r5
 8000b04:	f000 f994 	bl	8000e30 <_free_r>
 8000b08:	2000      	movs	r0, #0
 8000b0a:	6360      	str	r0, [r4, #52]	; 0x34
 8000b0c:	e7c0      	b.n	8000a90 <__sflush_r+0x1c>
 8000b0e:	2301      	movs	r3, #1
 8000b10:	4628      	mov	r0, r5
 8000b12:	47b0      	blx	r6
 8000b14:	1c41      	adds	r1, r0, #1
 8000b16:	d1c8      	bne.n	8000aaa <__sflush_r+0x36>
 8000b18:	682b      	ldr	r3, [r5, #0]
 8000b1a:	2b00      	cmp	r3, #0
 8000b1c:	d0c5      	beq.n	8000aaa <__sflush_r+0x36>
 8000b1e:	2b1d      	cmp	r3, #29
 8000b20:	d001      	beq.n	8000b26 <__sflush_r+0xb2>
 8000b22:	2b16      	cmp	r3, #22
 8000b24:	d101      	bne.n	8000b2a <__sflush_r+0xb6>
 8000b26:	602f      	str	r7, [r5, #0]
 8000b28:	e7b1      	b.n	8000a8e <__sflush_r+0x1a>
 8000b2a:	89a3      	ldrh	r3, [r4, #12]
 8000b2c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000b30:	81a3      	strh	r3, [r4, #12]
 8000b32:	e7ad      	b.n	8000a90 <__sflush_r+0x1c>
 8000b34:	690f      	ldr	r7, [r1, #16]
 8000b36:	2f00      	cmp	r7, #0
 8000b38:	d0a9      	beq.n	8000a8e <__sflush_r+0x1a>
 8000b3a:	0793      	lsls	r3, r2, #30
 8000b3c:	680e      	ldr	r6, [r1, #0]
 8000b3e:	bf08      	it	eq
 8000b40:	694b      	ldreq	r3, [r1, #20]
 8000b42:	600f      	str	r7, [r1, #0]
 8000b44:	bf18      	it	ne
 8000b46:	2300      	movne	r3, #0
 8000b48:	eba6 0807 	sub.w	r8, r6, r7
 8000b4c:	608b      	str	r3, [r1, #8]
 8000b4e:	f1b8 0f00 	cmp.w	r8, #0
 8000b52:	dd9c      	ble.n	8000a8e <__sflush_r+0x1a>
 8000b54:	4643      	mov	r3, r8
 8000b56:	463a      	mov	r2, r7
 8000b58:	6a21      	ldr	r1, [r4, #32]
 8000b5a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000b5c:	4628      	mov	r0, r5
 8000b5e:	47b0      	blx	r6
 8000b60:	2800      	cmp	r0, #0
 8000b62:	dc06      	bgt.n	8000b72 <__sflush_r+0xfe>
 8000b64:	89a3      	ldrh	r3, [r4, #12]
 8000b66:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000b6a:	81a3      	strh	r3, [r4, #12]
 8000b6c:	f04f 30ff 	mov.w	r0, #4294967295
 8000b70:	e78e      	b.n	8000a90 <__sflush_r+0x1c>
 8000b72:	4407      	add	r7, r0
 8000b74:	eba8 0800 	sub.w	r8, r8, r0
 8000b78:	e7e9      	b.n	8000b4e <__sflush_r+0xda>
 8000b7a:	bf00      	nop
 8000b7c:	20400001 	.word	0x20400001

08000b80 <_fflush_r>:
 8000b80:	b538      	push	{r3, r4, r5, lr}
 8000b82:	690b      	ldr	r3, [r1, #16]
 8000b84:	4605      	mov	r5, r0
 8000b86:	460c      	mov	r4, r1
 8000b88:	b1db      	cbz	r3, 8000bc2 <_fflush_r+0x42>
 8000b8a:	b118      	cbz	r0, 8000b94 <_fflush_r+0x14>
 8000b8c:	6983      	ldr	r3, [r0, #24]
 8000b8e:	b90b      	cbnz	r3, 8000b94 <_fflush_r+0x14>
 8000b90:	f000 f860 	bl	8000c54 <__sinit>
 8000b94:	4b0c      	ldr	r3, [pc, #48]	; (8000bc8 <_fflush_r+0x48>)
 8000b96:	429c      	cmp	r4, r3
 8000b98:	d109      	bne.n	8000bae <_fflush_r+0x2e>
 8000b9a:	686c      	ldr	r4, [r5, #4]
 8000b9c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000ba0:	b17b      	cbz	r3, 8000bc2 <_fflush_r+0x42>
 8000ba2:	4621      	mov	r1, r4
 8000ba4:	4628      	mov	r0, r5
 8000ba6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000baa:	f7ff bf63 	b.w	8000a74 <__sflush_r>
 8000bae:	4b07      	ldr	r3, [pc, #28]	; (8000bcc <_fflush_r+0x4c>)
 8000bb0:	429c      	cmp	r4, r3
 8000bb2:	d101      	bne.n	8000bb8 <_fflush_r+0x38>
 8000bb4:	68ac      	ldr	r4, [r5, #8]
 8000bb6:	e7f1      	b.n	8000b9c <_fflush_r+0x1c>
 8000bb8:	4b05      	ldr	r3, [pc, #20]	; (8000bd0 <_fflush_r+0x50>)
 8000bba:	429c      	cmp	r4, r3
 8000bbc:	bf08      	it	eq
 8000bbe:	68ec      	ldreq	r4, [r5, #12]
 8000bc0:	e7ec      	b.n	8000b9c <_fflush_r+0x1c>
 8000bc2:	2000      	movs	r0, #0
 8000bc4:	bd38      	pop	{r3, r4, r5, pc}
 8000bc6:	bf00      	nop
 8000bc8:	08001704 	.word	0x08001704
 8000bcc:	08001724 	.word	0x08001724
 8000bd0:	080016e4 	.word	0x080016e4

08000bd4 <std>:
 8000bd4:	2300      	movs	r3, #0
 8000bd6:	b510      	push	{r4, lr}
 8000bd8:	4604      	mov	r4, r0
 8000bda:	e9c0 3300 	strd	r3, r3, [r0]
 8000bde:	6083      	str	r3, [r0, #8]
 8000be0:	8181      	strh	r1, [r0, #12]
 8000be2:	6643      	str	r3, [r0, #100]	; 0x64
 8000be4:	81c2      	strh	r2, [r0, #14]
 8000be6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000bea:	6183      	str	r3, [r0, #24]
 8000bec:	4619      	mov	r1, r3
 8000bee:	2208      	movs	r2, #8
 8000bf0:	305c      	adds	r0, #92	; 0x5c
 8000bf2:	f7ff fdfb 	bl	80007ec <memset>
 8000bf6:	4b05      	ldr	r3, [pc, #20]	; (8000c0c <std+0x38>)
 8000bf8:	6263      	str	r3, [r4, #36]	; 0x24
 8000bfa:	4b05      	ldr	r3, [pc, #20]	; (8000c10 <std+0x3c>)
 8000bfc:	62a3      	str	r3, [r4, #40]	; 0x28
 8000bfe:	4b05      	ldr	r3, [pc, #20]	; (8000c14 <std+0x40>)
 8000c00:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000c02:	4b05      	ldr	r3, [pc, #20]	; (8000c18 <std+0x44>)
 8000c04:	6224      	str	r4, [r4, #32]
 8000c06:	6323      	str	r3, [r4, #48]	; 0x30
 8000c08:	bd10      	pop	{r4, pc}
 8000c0a:	bf00      	nop
 8000c0c:	08001531 	.word	0x08001531
 8000c10:	08001553 	.word	0x08001553
 8000c14:	0800158b 	.word	0x0800158b
 8000c18:	080015af 	.word	0x080015af

08000c1c <_cleanup_r>:
 8000c1c:	4901      	ldr	r1, [pc, #4]	; (8000c24 <_cleanup_r+0x8>)
 8000c1e:	f000 b885 	b.w	8000d2c <_fwalk_reent>
 8000c22:	bf00      	nop
 8000c24:	08000b81 	.word	0x08000b81

08000c28 <__sfmoreglue>:
 8000c28:	b570      	push	{r4, r5, r6, lr}
 8000c2a:	1e4a      	subs	r2, r1, #1
 8000c2c:	2568      	movs	r5, #104	; 0x68
 8000c2e:	4355      	muls	r5, r2
 8000c30:	460e      	mov	r6, r1
 8000c32:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000c36:	f000 f949 	bl	8000ecc <_malloc_r>
 8000c3a:	4604      	mov	r4, r0
 8000c3c:	b140      	cbz	r0, 8000c50 <__sfmoreglue+0x28>
 8000c3e:	2100      	movs	r1, #0
 8000c40:	e9c0 1600 	strd	r1, r6, [r0]
 8000c44:	300c      	adds	r0, #12
 8000c46:	60a0      	str	r0, [r4, #8]
 8000c48:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000c4c:	f7ff fdce 	bl	80007ec <memset>
 8000c50:	4620      	mov	r0, r4
 8000c52:	bd70      	pop	{r4, r5, r6, pc}

08000c54 <__sinit>:
 8000c54:	6983      	ldr	r3, [r0, #24]
 8000c56:	b510      	push	{r4, lr}
 8000c58:	4604      	mov	r4, r0
 8000c5a:	bb33      	cbnz	r3, 8000caa <__sinit+0x56>
 8000c5c:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8000c60:	6503      	str	r3, [r0, #80]	; 0x50
 8000c62:	4b12      	ldr	r3, [pc, #72]	; (8000cac <__sinit+0x58>)
 8000c64:	4a12      	ldr	r2, [pc, #72]	; (8000cb0 <__sinit+0x5c>)
 8000c66:	681b      	ldr	r3, [r3, #0]
 8000c68:	6282      	str	r2, [r0, #40]	; 0x28
 8000c6a:	4298      	cmp	r0, r3
 8000c6c:	bf04      	itt	eq
 8000c6e:	2301      	moveq	r3, #1
 8000c70:	6183      	streq	r3, [r0, #24]
 8000c72:	f000 f81f 	bl	8000cb4 <__sfp>
 8000c76:	6060      	str	r0, [r4, #4]
 8000c78:	4620      	mov	r0, r4
 8000c7a:	f000 f81b 	bl	8000cb4 <__sfp>
 8000c7e:	60a0      	str	r0, [r4, #8]
 8000c80:	4620      	mov	r0, r4
 8000c82:	f000 f817 	bl	8000cb4 <__sfp>
 8000c86:	2200      	movs	r2, #0
 8000c88:	60e0      	str	r0, [r4, #12]
 8000c8a:	2104      	movs	r1, #4
 8000c8c:	6860      	ldr	r0, [r4, #4]
 8000c8e:	f7ff ffa1 	bl	8000bd4 <std>
 8000c92:	2201      	movs	r2, #1
 8000c94:	2109      	movs	r1, #9
 8000c96:	68a0      	ldr	r0, [r4, #8]
 8000c98:	f7ff ff9c 	bl	8000bd4 <std>
 8000c9c:	2202      	movs	r2, #2
 8000c9e:	2112      	movs	r1, #18
 8000ca0:	68e0      	ldr	r0, [r4, #12]
 8000ca2:	f7ff ff97 	bl	8000bd4 <std>
 8000ca6:	2301      	movs	r3, #1
 8000ca8:	61a3      	str	r3, [r4, #24]
 8000caa:	bd10      	pop	{r4, pc}
 8000cac:	080016e0 	.word	0x080016e0
 8000cb0:	08000c1d 	.word	0x08000c1d

08000cb4 <__sfp>:
 8000cb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cb6:	4b1b      	ldr	r3, [pc, #108]	; (8000d24 <__sfp+0x70>)
 8000cb8:	681e      	ldr	r6, [r3, #0]
 8000cba:	69b3      	ldr	r3, [r6, #24]
 8000cbc:	4607      	mov	r7, r0
 8000cbe:	b913      	cbnz	r3, 8000cc6 <__sfp+0x12>
 8000cc0:	4630      	mov	r0, r6
 8000cc2:	f7ff ffc7 	bl	8000c54 <__sinit>
 8000cc6:	3648      	adds	r6, #72	; 0x48
 8000cc8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000ccc:	3b01      	subs	r3, #1
 8000cce:	d503      	bpl.n	8000cd8 <__sfp+0x24>
 8000cd0:	6833      	ldr	r3, [r6, #0]
 8000cd2:	b133      	cbz	r3, 8000ce2 <__sfp+0x2e>
 8000cd4:	6836      	ldr	r6, [r6, #0]
 8000cd6:	e7f7      	b.n	8000cc8 <__sfp+0x14>
 8000cd8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000cdc:	b16d      	cbz	r5, 8000cfa <__sfp+0x46>
 8000cde:	3468      	adds	r4, #104	; 0x68
 8000ce0:	e7f4      	b.n	8000ccc <__sfp+0x18>
 8000ce2:	2104      	movs	r1, #4
 8000ce4:	4638      	mov	r0, r7
 8000ce6:	f7ff ff9f 	bl	8000c28 <__sfmoreglue>
 8000cea:	6030      	str	r0, [r6, #0]
 8000cec:	2800      	cmp	r0, #0
 8000cee:	d1f1      	bne.n	8000cd4 <__sfp+0x20>
 8000cf0:	230c      	movs	r3, #12
 8000cf2:	603b      	str	r3, [r7, #0]
 8000cf4:	4604      	mov	r4, r0
 8000cf6:	4620      	mov	r0, r4
 8000cf8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000cfa:	4b0b      	ldr	r3, [pc, #44]	; (8000d28 <__sfp+0x74>)
 8000cfc:	6665      	str	r5, [r4, #100]	; 0x64
 8000cfe:	e9c4 5500 	strd	r5, r5, [r4]
 8000d02:	60a5      	str	r5, [r4, #8]
 8000d04:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8000d08:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8000d0c:	2208      	movs	r2, #8
 8000d0e:	4629      	mov	r1, r5
 8000d10:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000d14:	f7ff fd6a 	bl	80007ec <memset>
 8000d18:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000d1c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000d20:	e7e9      	b.n	8000cf6 <__sfp+0x42>
 8000d22:	bf00      	nop
 8000d24:	080016e0 	.word	0x080016e0
 8000d28:	ffff0001 	.word	0xffff0001

08000d2c <_fwalk_reent>:
 8000d2c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000d30:	4680      	mov	r8, r0
 8000d32:	4689      	mov	r9, r1
 8000d34:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000d38:	2600      	movs	r6, #0
 8000d3a:	b914      	cbnz	r4, 8000d42 <_fwalk_reent+0x16>
 8000d3c:	4630      	mov	r0, r6
 8000d3e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000d42:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8000d46:	3f01      	subs	r7, #1
 8000d48:	d501      	bpl.n	8000d4e <_fwalk_reent+0x22>
 8000d4a:	6824      	ldr	r4, [r4, #0]
 8000d4c:	e7f5      	b.n	8000d3a <_fwalk_reent+0xe>
 8000d4e:	89ab      	ldrh	r3, [r5, #12]
 8000d50:	2b01      	cmp	r3, #1
 8000d52:	d907      	bls.n	8000d64 <_fwalk_reent+0x38>
 8000d54:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000d58:	3301      	adds	r3, #1
 8000d5a:	d003      	beq.n	8000d64 <_fwalk_reent+0x38>
 8000d5c:	4629      	mov	r1, r5
 8000d5e:	4640      	mov	r0, r8
 8000d60:	47c8      	blx	r9
 8000d62:	4306      	orrs	r6, r0
 8000d64:	3568      	adds	r5, #104	; 0x68
 8000d66:	e7ee      	b.n	8000d46 <_fwalk_reent+0x1a>

08000d68 <__swhatbuf_r>:
 8000d68:	b570      	push	{r4, r5, r6, lr}
 8000d6a:	460e      	mov	r6, r1
 8000d6c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d70:	2900      	cmp	r1, #0
 8000d72:	b096      	sub	sp, #88	; 0x58
 8000d74:	4614      	mov	r4, r2
 8000d76:	461d      	mov	r5, r3
 8000d78:	da07      	bge.n	8000d8a <__swhatbuf_r+0x22>
 8000d7a:	2300      	movs	r3, #0
 8000d7c:	602b      	str	r3, [r5, #0]
 8000d7e:	89b3      	ldrh	r3, [r6, #12]
 8000d80:	061a      	lsls	r2, r3, #24
 8000d82:	d410      	bmi.n	8000da6 <__swhatbuf_r+0x3e>
 8000d84:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000d88:	e00e      	b.n	8000da8 <__swhatbuf_r+0x40>
 8000d8a:	466a      	mov	r2, sp
 8000d8c:	f000 fc36 	bl	80015fc <_fstat_r>
 8000d90:	2800      	cmp	r0, #0
 8000d92:	dbf2      	blt.n	8000d7a <__swhatbuf_r+0x12>
 8000d94:	9a01      	ldr	r2, [sp, #4]
 8000d96:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000d9a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000d9e:	425a      	negs	r2, r3
 8000da0:	415a      	adcs	r2, r3
 8000da2:	602a      	str	r2, [r5, #0]
 8000da4:	e7ee      	b.n	8000d84 <__swhatbuf_r+0x1c>
 8000da6:	2340      	movs	r3, #64	; 0x40
 8000da8:	2000      	movs	r0, #0
 8000daa:	6023      	str	r3, [r4, #0]
 8000dac:	b016      	add	sp, #88	; 0x58
 8000dae:	bd70      	pop	{r4, r5, r6, pc}

08000db0 <__smakebuf_r>:
 8000db0:	898b      	ldrh	r3, [r1, #12]
 8000db2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000db4:	079d      	lsls	r5, r3, #30
 8000db6:	4606      	mov	r6, r0
 8000db8:	460c      	mov	r4, r1
 8000dba:	d507      	bpl.n	8000dcc <__smakebuf_r+0x1c>
 8000dbc:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000dc0:	6023      	str	r3, [r4, #0]
 8000dc2:	6123      	str	r3, [r4, #16]
 8000dc4:	2301      	movs	r3, #1
 8000dc6:	6163      	str	r3, [r4, #20]
 8000dc8:	b002      	add	sp, #8
 8000dca:	bd70      	pop	{r4, r5, r6, pc}
 8000dcc:	ab01      	add	r3, sp, #4
 8000dce:	466a      	mov	r2, sp
 8000dd0:	f7ff ffca 	bl	8000d68 <__swhatbuf_r>
 8000dd4:	9900      	ldr	r1, [sp, #0]
 8000dd6:	4605      	mov	r5, r0
 8000dd8:	4630      	mov	r0, r6
 8000dda:	f000 f877 	bl	8000ecc <_malloc_r>
 8000dde:	b948      	cbnz	r0, 8000df4 <__smakebuf_r+0x44>
 8000de0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000de4:	059a      	lsls	r2, r3, #22
 8000de6:	d4ef      	bmi.n	8000dc8 <__smakebuf_r+0x18>
 8000de8:	f023 0303 	bic.w	r3, r3, #3
 8000dec:	f043 0302 	orr.w	r3, r3, #2
 8000df0:	81a3      	strh	r3, [r4, #12]
 8000df2:	e7e3      	b.n	8000dbc <__smakebuf_r+0xc>
 8000df4:	4b0d      	ldr	r3, [pc, #52]	; (8000e2c <__smakebuf_r+0x7c>)
 8000df6:	62b3      	str	r3, [r6, #40]	; 0x28
 8000df8:	89a3      	ldrh	r3, [r4, #12]
 8000dfa:	6020      	str	r0, [r4, #0]
 8000dfc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000e00:	81a3      	strh	r3, [r4, #12]
 8000e02:	9b00      	ldr	r3, [sp, #0]
 8000e04:	6163      	str	r3, [r4, #20]
 8000e06:	9b01      	ldr	r3, [sp, #4]
 8000e08:	6120      	str	r0, [r4, #16]
 8000e0a:	b15b      	cbz	r3, 8000e24 <__smakebuf_r+0x74>
 8000e0c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000e10:	4630      	mov	r0, r6
 8000e12:	f000 fc05 	bl	8001620 <_isatty_r>
 8000e16:	b128      	cbz	r0, 8000e24 <__smakebuf_r+0x74>
 8000e18:	89a3      	ldrh	r3, [r4, #12]
 8000e1a:	f023 0303 	bic.w	r3, r3, #3
 8000e1e:	f043 0301 	orr.w	r3, r3, #1
 8000e22:	81a3      	strh	r3, [r4, #12]
 8000e24:	89a3      	ldrh	r3, [r4, #12]
 8000e26:	431d      	orrs	r5, r3
 8000e28:	81a5      	strh	r5, [r4, #12]
 8000e2a:	e7cd      	b.n	8000dc8 <__smakebuf_r+0x18>
 8000e2c:	08000c1d 	.word	0x08000c1d

08000e30 <_free_r>:
 8000e30:	b538      	push	{r3, r4, r5, lr}
 8000e32:	4605      	mov	r5, r0
 8000e34:	2900      	cmp	r1, #0
 8000e36:	d045      	beq.n	8000ec4 <_free_r+0x94>
 8000e38:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000e3c:	1f0c      	subs	r4, r1, #4
 8000e3e:	2b00      	cmp	r3, #0
 8000e40:	bfb8      	it	lt
 8000e42:	18e4      	addlt	r4, r4, r3
 8000e44:	f000 fc0e 	bl	8001664 <__malloc_lock>
 8000e48:	4a1f      	ldr	r2, [pc, #124]	; (8000ec8 <_free_r+0x98>)
 8000e4a:	6813      	ldr	r3, [r2, #0]
 8000e4c:	4610      	mov	r0, r2
 8000e4e:	b933      	cbnz	r3, 8000e5e <_free_r+0x2e>
 8000e50:	6063      	str	r3, [r4, #4]
 8000e52:	6014      	str	r4, [r2, #0]
 8000e54:	4628      	mov	r0, r5
 8000e56:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000e5a:	f000 bc04 	b.w	8001666 <__malloc_unlock>
 8000e5e:	42a3      	cmp	r3, r4
 8000e60:	d90c      	bls.n	8000e7c <_free_r+0x4c>
 8000e62:	6821      	ldr	r1, [r4, #0]
 8000e64:	1862      	adds	r2, r4, r1
 8000e66:	4293      	cmp	r3, r2
 8000e68:	bf04      	itt	eq
 8000e6a:	681a      	ldreq	r2, [r3, #0]
 8000e6c:	685b      	ldreq	r3, [r3, #4]
 8000e6e:	6063      	str	r3, [r4, #4]
 8000e70:	bf04      	itt	eq
 8000e72:	1852      	addeq	r2, r2, r1
 8000e74:	6022      	streq	r2, [r4, #0]
 8000e76:	6004      	str	r4, [r0, #0]
 8000e78:	e7ec      	b.n	8000e54 <_free_r+0x24>
 8000e7a:	4613      	mov	r3, r2
 8000e7c:	685a      	ldr	r2, [r3, #4]
 8000e7e:	b10a      	cbz	r2, 8000e84 <_free_r+0x54>
 8000e80:	42a2      	cmp	r2, r4
 8000e82:	d9fa      	bls.n	8000e7a <_free_r+0x4a>
 8000e84:	6819      	ldr	r1, [r3, #0]
 8000e86:	1858      	adds	r0, r3, r1
 8000e88:	42a0      	cmp	r0, r4
 8000e8a:	d10b      	bne.n	8000ea4 <_free_r+0x74>
 8000e8c:	6820      	ldr	r0, [r4, #0]
 8000e8e:	4401      	add	r1, r0
 8000e90:	1858      	adds	r0, r3, r1
 8000e92:	4282      	cmp	r2, r0
 8000e94:	6019      	str	r1, [r3, #0]
 8000e96:	d1dd      	bne.n	8000e54 <_free_r+0x24>
 8000e98:	6810      	ldr	r0, [r2, #0]
 8000e9a:	6852      	ldr	r2, [r2, #4]
 8000e9c:	605a      	str	r2, [r3, #4]
 8000e9e:	4401      	add	r1, r0
 8000ea0:	6019      	str	r1, [r3, #0]
 8000ea2:	e7d7      	b.n	8000e54 <_free_r+0x24>
 8000ea4:	d902      	bls.n	8000eac <_free_r+0x7c>
 8000ea6:	230c      	movs	r3, #12
 8000ea8:	602b      	str	r3, [r5, #0]
 8000eaa:	e7d3      	b.n	8000e54 <_free_r+0x24>
 8000eac:	6820      	ldr	r0, [r4, #0]
 8000eae:	1821      	adds	r1, r4, r0
 8000eb0:	428a      	cmp	r2, r1
 8000eb2:	bf04      	itt	eq
 8000eb4:	6811      	ldreq	r1, [r2, #0]
 8000eb6:	6852      	ldreq	r2, [r2, #4]
 8000eb8:	6062      	str	r2, [r4, #4]
 8000eba:	bf04      	itt	eq
 8000ebc:	1809      	addeq	r1, r1, r0
 8000ebe:	6021      	streq	r1, [r4, #0]
 8000ec0:	605c      	str	r4, [r3, #4]
 8000ec2:	e7c7      	b.n	8000e54 <_free_r+0x24>
 8000ec4:	bd38      	pop	{r3, r4, r5, pc}
 8000ec6:	bf00      	nop
 8000ec8:	20000088 	.word	0x20000088

08000ecc <_malloc_r>:
 8000ecc:	b570      	push	{r4, r5, r6, lr}
 8000ece:	1ccd      	adds	r5, r1, #3
 8000ed0:	f025 0503 	bic.w	r5, r5, #3
 8000ed4:	3508      	adds	r5, #8
 8000ed6:	2d0c      	cmp	r5, #12
 8000ed8:	bf38      	it	cc
 8000eda:	250c      	movcc	r5, #12
 8000edc:	2d00      	cmp	r5, #0
 8000ede:	4606      	mov	r6, r0
 8000ee0:	db01      	blt.n	8000ee6 <_malloc_r+0x1a>
 8000ee2:	42a9      	cmp	r1, r5
 8000ee4:	d903      	bls.n	8000eee <_malloc_r+0x22>
 8000ee6:	230c      	movs	r3, #12
 8000ee8:	6033      	str	r3, [r6, #0]
 8000eea:	2000      	movs	r0, #0
 8000eec:	bd70      	pop	{r4, r5, r6, pc}
 8000eee:	f000 fbb9 	bl	8001664 <__malloc_lock>
 8000ef2:	4a21      	ldr	r2, [pc, #132]	; (8000f78 <_malloc_r+0xac>)
 8000ef4:	6814      	ldr	r4, [r2, #0]
 8000ef6:	4621      	mov	r1, r4
 8000ef8:	b991      	cbnz	r1, 8000f20 <_malloc_r+0x54>
 8000efa:	4c20      	ldr	r4, [pc, #128]	; (8000f7c <_malloc_r+0xb0>)
 8000efc:	6823      	ldr	r3, [r4, #0]
 8000efe:	b91b      	cbnz	r3, 8000f08 <_malloc_r+0x3c>
 8000f00:	4630      	mov	r0, r6
 8000f02:	f000 fb05 	bl	8001510 <_sbrk_r>
 8000f06:	6020      	str	r0, [r4, #0]
 8000f08:	4629      	mov	r1, r5
 8000f0a:	4630      	mov	r0, r6
 8000f0c:	f000 fb00 	bl	8001510 <_sbrk_r>
 8000f10:	1c43      	adds	r3, r0, #1
 8000f12:	d124      	bne.n	8000f5e <_malloc_r+0x92>
 8000f14:	230c      	movs	r3, #12
 8000f16:	6033      	str	r3, [r6, #0]
 8000f18:	4630      	mov	r0, r6
 8000f1a:	f000 fba4 	bl	8001666 <__malloc_unlock>
 8000f1e:	e7e4      	b.n	8000eea <_malloc_r+0x1e>
 8000f20:	680b      	ldr	r3, [r1, #0]
 8000f22:	1b5b      	subs	r3, r3, r5
 8000f24:	d418      	bmi.n	8000f58 <_malloc_r+0x8c>
 8000f26:	2b0b      	cmp	r3, #11
 8000f28:	d90f      	bls.n	8000f4a <_malloc_r+0x7e>
 8000f2a:	600b      	str	r3, [r1, #0]
 8000f2c:	50cd      	str	r5, [r1, r3]
 8000f2e:	18cc      	adds	r4, r1, r3
 8000f30:	4630      	mov	r0, r6
 8000f32:	f000 fb98 	bl	8001666 <__malloc_unlock>
 8000f36:	f104 000b 	add.w	r0, r4, #11
 8000f3a:	1d23      	adds	r3, r4, #4
 8000f3c:	f020 0007 	bic.w	r0, r0, #7
 8000f40:	1ac3      	subs	r3, r0, r3
 8000f42:	d0d3      	beq.n	8000eec <_malloc_r+0x20>
 8000f44:	425a      	negs	r2, r3
 8000f46:	50e2      	str	r2, [r4, r3]
 8000f48:	e7d0      	b.n	8000eec <_malloc_r+0x20>
 8000f4a:	428c      	cmp	r4, r1
 8000f4c:	684b      	ldr	r3, [r1, #4]
 8000f4e:	bf16      	itet	ne
 8000f50:	6063      	strne	r3, [r4, #4]
 8000f52:	6013      	streq	r3, [r2, #0]
 8000f54:	460c      	movne	r4, r1
 8000f56:	e7eb      	b.n	8000f30 <_malloc_r+0x64>
 8000f58:	460c      	mov	r4, r1
 8000f5a:	6849      	ldr	r1, [r1, #4]
 8000f5c:	e7cc      	b.n	8000ef8 <_malloc_r+0x2c>
 8000f5e:	1cc4      	adds	r4, r0, #3
 8000f60:	f024 0403 	bic.w	r4, r4, #3
 8000f64:	42a0      	cmp	r0, r4
 8000f66:	d005      	beq.n	8000f74 <_malloc_r+0xa8>
 8000f68:	1a21      	subs	r1, r4, r0
 8000f6a:	4630      	mov	r0, r6
 8000f6c:	f000 fad0 	bl	8001510 <_sbrk_r>
 8000f70:	3001      	adds	r0, #1
 8000f72:	d0cf      	beq.n	8000f14 <_malloc_r+0x48>
 8000f74:	6025      	str	r5, [r4, #0]
 8000f76:	e7db      	b.n	8000f30 <_malloc_r+0x64>
 8000f78:	20000088 	.word	0x20000088
 8000f7c:	2000008c 	.word	0x2000008c

08000f80 <__sfputc_r>:
 8000f80:	6893      	ldr	r3, [r2, #8]
 8000f82:	3b01      	subs	r3, #1
 8000f84:	2b00      	cmp	r3, #0
 8000f86:	b410      	push	{r4}
 8000f88:	6093      	str	r3, [r2, #8]
 8000f8a:	da08      	bge.n	8000f9e <__sfputc_r+0x1e>
 8000f8c:	6994      	ldr	r4, [r2, #24]
 8000f8e:	42a3      	cmp	r3, r4
 8000f90:	db01      	blt.n	8000f96 <__sfputc_r+0x16>
 8000f92:	290a      	cmp	r1, #10
 8000f94:	d103      	bne.n	8000f9e <__sfputc_r+0x1e>
 8000f96:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000f9a:	f7ff bcab 	b.w	80008f4 <__swbuf_r>
 8000f9e:	6813      	ldr	r3, [r2, #0]
 8000fa0:	1c58      	adds	r0, r3, #1
 8000fa2:	6010      	str	r0, [r2, #0]
 8000fa4:	7019      	strb	r1, [r3, #0]
 8000fa6:	4608      	mov	r0, r1
 8000fa8:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000fac:	4770      	bx	lr

08000fae <__sfputs_r>:
 8000fae:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000fb0:	4606      	mov	r6, r0
 8000fb2:	460f      	mov	r7, r1
 8000fb4:	4614      	mov	r4, r2
 8000fb6:	18d5      	adds	r5, r2, r3
 8000fb8:	42ac      	cmp	r4, r5
 8000fba:	d101      	bne.n	8000fc0 <__sfputs_r+0x12>
 8000fbc:	2000      	movs	r0, #0
 8000fbe:	e007      	b.n	8000fd0 <__sfputs_r+0x22>
 8000fc0:	463a      	mov	r2, r7
 8000fc2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000fc6:	4630      	mov	r0, r6
 8000fc8:	f7ff ffda 	bl	8000f80 <__sfputc_r>
 8000fcc:	1c43      	adds	r3, r0, #1
 8000fce:	d1f3      	bne.n	8000fb8 <__sfputs_r+0xa>
 8000fd0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000fd4 <_vfiprintf_r>:
 8000fd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000fd8:	460c      	mov	r4, r1
 8000fda:	b09d      	sub	sp, #116	; 0x74
 8000fdc:	4617      	mov	r7, r2
 8000fde:	461d      	mov	r5, r3
 8000fe0:	4606      	mov	r6, r0
 8000fe2:	b118      	cbz	r0, 8000fec <_vfiprintf_r+0x18>
 8000fe4:	6983      	ldr	r3, [r0, #24]
 8000fe6:	b90b      	cbnz	r3, 8000fec <_vfiprintf_r+0x18>
 8000fe8:	f7ff fe34 	bl	8000c54 <__sinit>
 8000fec:	4b7c      	ldr	r3, [pc, #496]	; (80011e0 <_vfiprintf_r+0x20c>)
 8000fee:	429c      	cmp	r4, r3
 8000ff0:	d158      	bne.n	80010a4 <_vfiprintf_r+0xd0>
 8000ff2:	6874      	ldr	r4, [r6, #4]
 8000ff4:	89a3      	ldrh	r3, [r4, #12]
 8000ff6:	0718      	lsls	r0, r3, #28
 8000ff8:	d55e      	bpl.n	80010b8 <_vfiprintf_r+0xe4>
 8000ffa:	6923      	ldr	r3, [r4, #16]
 8000ffc:	2b00      	cmp	r3, #0
 8000ffe:	d05b      	beq.n	80010b8 <_vfiprintf_r+0xe4>
 8001000:	2300      	movs	r3, #0
 8001002:	9309      	str	r3, [sp, #36]	; 0x24
 8001004:	2320      	movs	r3, #32
 8001006:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800100a:	2330      	movs	r3, #48	; 0x30
 800100c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8001010:	9503      	str	r5, [sp, #12]
 8001012:	f04f 0b01 	mov.w	fp, #1
 8001016:	46b8      	mov	r8, r7
 8001018:	4645      	mov	r5, r8
 800101a:	f815 3b01 	ldrb.w	r3, [r5], #1
 800101e:	b10b      	cbz	r3, 8001024 <_vfiprintf_r+0x50>
 8001020:	2b25      	cmp	r3, #37	; 0x25
 8001022:	d154      	bne.n	80010ce <_vfiprintf_r+0xfa>
 8001024:	ebb8 0a07 	subs.w	sl, r8, r7
 8001028:	d00b      	beq.n	8001042 <_vfiprintf_r+0x6e>
 800102a:	4653      	mov	r3, sl
 800102c:	463a      	mov	r2, r7
 800102e:	4621      	mov	r1, r4
 8001030:	4630      	mov	r0, r6
 8001032:	f7ff ffbc 	bl	8000fae <__sfputs_r>
 8001036:	3001      	adds	r0, #1
 8001038:	f000 80c2 	beq.w	80011c0 <_vfiprintf_r+0x1ec>
 800103c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800103e:	4453      	add	r3, sl
 8001040:	9309      	str	r3, [sp, #36]	; 0x24
 8001042:	f898 3000 	ldrb.w	r3, [r8]
 8001046:	2b00      	cmp	r3, #0
 8001048:	f000 80ba 	beq.w	80011c0 <_vfiprintf_r+0x1ec>
 800104c:	2300      	movs	r3, #0
 800104e:	f04f 32ff 	mov.w	r2, #4294967295
 8001052:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8001056:	9304      	str	r3, [sp, #16]
 8001058:	9307      	str	r3, [sp, #28]
 800105a:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800105e:	931a      	str	r3, [sp, #104]	; 0x68
 8001060:	46a8      	mov	r8, r5
 8001062:	2205      	movs	r2, #5
 8001064:	f818 1b01 	ldrb.w	r1, [r8], #1
 8001068:	485e      	ldr	r0, [pc, #376]	; (80011e4 <_vfiprintf_r+0x210>)
 800106a:	f7ff f8d9 	bl	8000220 <memchr>
 800106e:	9b04      	ldr	r3, [sp, #16]
 8001070:	bb78      	cbnz	r0, 80010d2 <_vfiprintf_r+0xfe>
 8001072:	06d9      	lsls	r1, r3, #27
 8001074:	bf44      	itt	mi
 8001076:	2220      	movmi	r2, #32
 8001078:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 800107c:	071a      	lsls	r2, r3, #28
 800107e:	bf44      	itt	mi
 8001080:	222b      	movmi	r2, #43	; 0x2b
 8001082:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8001086:	782a      	ldrb	r2, [r5, #0]
 8001088:	2a2a      	cmp	r2, #42	; 0x2a
 800108a:	d02a      	beq.n	80010e2 <_vfiprintf_r+0x10e>
 800108c:	9a07      	ldr	r2, [sp, #28]
 800108e:	46a8      	mov	r8, r5
 8001090:	2000      	movs	r0, #0
 8001092:	250a      	movs	r5, #10
 8001094:	4641      	mov	r1, r8
 8001096:	f811 3b01 	ldrb.w	r3, [r1], #1
 800109a:	3b30      	subs	r3, #48	; 0x30
 800109c:	2b09      	cmp	r3, #9
 800109e:	d969      	bls.n	8001174 <_vfiprintf_r+0x1a0>
 80010a0:	b360      	cbz	r0, 80010fc <_vfiprintf_r+0x128>
 80010a2:	e024      	b.n	80010ee <_vfiprintf_r+0x11a>
 80010a4:	4b50      	ldr	r3, [pc, #320]	; (80011e8 <_vfiprintf_r+0x214>)
 80010a6:	429c      	cmp	r4, r3
 80010a8:	d101      	bne.n	80010ae <_vfiprintf_r+0xda>
 80010aa:	68b4      	ldr	r4, [r6, #8]
 80010ac:	e7a2      	b.n	8000ff4 <_vfiprintf_r+0x20>
 80010ae:	4b4f      	ldr	r3, [pc, #316]	; (80011ec <_vfiprintf_r+0x218>)
 80010b0:	429c      	cmp	r4, r3
 80010b2:	bf08      	it	eq
 80010b4:	68f4      	ldreq	r4, [r6, #12]
 80010b6:	e79d      	b.n	8000ff4 <_vfiprintf_r+0x20>
 80010b8:	4621      	mov	r1, r4
 80010ba:	4630      	mov	r0, r6
 80010bc:	f7ff fc6c 	bl	8000998 <__swsetup_r>
 80010c0:	2800      	cmp	r0, #0
 80010c2:	d09d      	beq.n	8001000 <_vfiprintf_r+0x2c>
 80010c4:	f04f 30ff 	mov.w	r0, #4294967295
 80010c8:	b01d      	add	sp, #116	; 0x74
 80010ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80010ce:	46a8      	mov	r8, r5
 80010d0:	e7a2      	b.n	8001018 <_vfiprintf_r+0x44>
 80010d2:	4a44      	ldr	r2, [pc, #272]	; (80011e4 <_vfiprintf_r+0x210>)
 80010d4:	1a80      	subs	r0, r0, r2
 80010d6:	fa0b f000 	lsl.w	r0, fp, r0
 80010da:	4318      	orrs	r0, r3
 80010dc:	9004      	str	r0, [sp, #16]
 80010de:	4645      	mov	r5, r8
 80010e0:	e7be      	b.n	8001060 <_vfiprintf_r+0x8c>
 80010e2:	9a03      	ldr	r2, [sp, #12]
 80010e4:	1d11      	adds	r1, r2, #4
 80010e6:	6812      	ldr	r2, [r2, #0]
 80010e8:	9103      	str	r1, [sp, #12]
 80010ea:	2a00      	cmp	r2, #0
 80010ec:	db01      	blt.n	80010f2 <_vfiprintf_r+0x11e>
 80010ee:	9207      	str	r2, [sp, #28]
 80010f0:	e004      	b.n	80010fc <_vfiprintf_r+0x128>
 80010f2:	4252      	negs	r2, r2
 80010f4:	f043 0302 	orr.w	r3, r3, #2
 80010f8:	9207      	str	r2, [sp, #28]
 80010fa:	9304      	str	r3, [sp, #16]
 80010fc:	f898 3000 	ldrb.w	r3, [r8]
 8001100:	2b2e      	cmp	r3, #46	; 0x2e
 8001102:	d10e      	bne.n	8001122 <_vfiprintf_r+0x14e>
 8001104:	f898 3001 	ldrb.w	r3, [r8, #1]
 8001108:	2b2a      	cmp	r3, #42	; 0x2a
 800110a:	d138      	bne.n	800117e <_vfiprintf_r+0x1aa>
 800110c:	9b03      	ldr	r3, [sp, #12]
 800110e:	1d1a      	adds	r2, r3, #4
 8001110:	681b      	ldr	r3, [r3, #0]
 8001112:	9203      	str	r2, [sp, #12]
 8001114:	2b00      	cmp	r3, #0
 8001116:	bfb8      	it	lt
 8001118:	f04f 33ff 	movlt.w	r3, #4294967295
 800111c:	f108 0802 	add.w	r8, r8, #2
 8001120:	9305      	str	r3, [sp, #20]
 8001122:	4d33      	ldr	r5, [pc, #204]	; (80011f0 <_vfiprintf_r+0x21c>)
 8001124:	f898 1000 	ldrb.w	r1, [r8]
 8001128:	2203      	movs	r2, #3
 800112a:	4628      	mov	r0, r5
 800112c:	f7ff f878 	bl	8000220 <memchr>
 8001130:	b140      	cbz	r0, 8001144 <_vfiprintf_r+0x170>
 8001132:	2340      	movs	r3, #64	; 0x40
 8001134:	1b40      	subs	r0, r0, r5
 8001136:	fa03 f000 	lsl.w	r0, r3, r0
 800113a:	9b04      	ldr	r3, [sp, #16]
 800113c:	4303      	orrs	r3, r0
 800113e:	f108 0801 	add.w	r8, r8, #1
 8001142:	9304      	str	r3, [sp, #16]
 8001144:	f898 1000 	ldrb.w	r1, [r8]
 8001148:	482a      	ldr	r0, [pc, #168]	; (80011f4 <_vfiprintf_r+0x220>)
 800114a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800114e:	2206      	movs	r2, #6
 8001150:	f108 0701 	add.w	r7, r8, #1
 8001154:	f7ff f864 	bl	8000220 <memchr>
 8001158:	2800      	cmp	r0, #0
 800115a:	d037      	beq.n	80011cc <_vfiprintf_r+0x1f8>
 800115c:	4b26      	ldr	r3, [pc, #152]	; (80011f8 <_vfiprintf_r+0x224>)
 800115e:	bb1b      	cbnz	r3, 80011a8 <_vfiprintf_r+0x1d4>
 8001160:	9b03      	ldr	r3, [sp, #12]
 8001162:	3307      	adds	r3, #7
 8001164:	f023 0307 	bic.w	r3, r3, #7
 8001168:	3308      	adds	r3, #8
 800116a:	9303      	str	r3, [sp, #12]
 800116c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800116e:	444b      	add	r3, r9
 8001170:	9309      	str	r3, [sp, #36]	; 0x24
 8001172:	e750      	b.n	8001016 <_vfiprintf_r+0x42>
 8001174:	fb05 3202 	mla	r2, r5, r2, r3
 8001178:	2001      	movs	r0, #1
 800117a:	4688      	mov	r8, r1
 800117c:	e78a      	b.n	8001094 <_vfiprintf_r+0xc0>
 800117e:	2300      	movs	r3, #0
 8001180:	f108 0801 	add.w	r8, r8, #1
 8001184:	9305      	str	r3, [sp, #20]
 8001186:	4619      	mov	r1, r3
 8001188:	250a      	movs	r5, #10
 800118a:	4640      	mov	r0, r8
 800118c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8001190:	3a30      	subs	r2, #48	; 0x30
 8001192:	2a09      	cmp	r2, #9
 8001194:	d903      	bls.n	800119e <_vfiprintf_r+0x1ca>
 8001196:	2b00      	cmp	r3, #0
 8001198:	d0c3      	beq.n	8001122 <_vfiprintf_r+0x14e>
 800119a:	9105      	str	r1, [sp, #20]
 800119c:	e7c1      	b.n	8001122 <_vfiprintf_r+0x14e>
 800119e:	fb05 2101 	mla	r1, r5, r1, r2
 80011a2:	2301      	movs	r3, #1
 80011a4:	4680      	mov	r8, r0
 80011a6:	e7f0      	b.n	800118a <_vfiprintf_r+0x1b6>
 80011a8:	ab03      	add	r3, sp, #12
 80011aa:	9300      	str	r3, [sp, #0]
 80011ac:	4622      	mov	r2, r4
 80011ae:	4b13      	ldr	r3, [pc, #76]	; (80011fc <_vfiprintf_r+0x228>)
 80011b0:	a904      	add	r1, sp, #16
 80011b2:	4630      	mov	r0, r6
 80011b4:	f3af 8000 	nop.w
 80011b8:	f1b0 3fff 	cmp.w	r0, #4294967295
 80011bc:	4681      	mov	r9, r0
 80011be:	d1d5      	bne.n	800116c <_vfiprintf_r+0x198>
 80011c0:	89a3      	ldrh	r3, [r4, #12]
 80011c2:	065b      	lsls	r3, r3, #25
 80011c4:	f53f af7e 	bmi.w	80010c4 <_vfiprintf_r+0xf0>
 80011c8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80011ca:	e77d      	b.n	80010c8 <_vfiprintf_r+0xf4>
 80011cc:	ab03      	add	r3, sp, #12
 80011ce:	9300      	str	r3, [sp, #0]
 80011d0:	4622      	mov	r2, r4
 80011d2:	4b0a      	ldr	r3, [pc, #40]	; (80011fc <_vfiprintf_r+0x228>)
 80011d4:	a904      	add	r1, sp, #16
 80011d6:	4630      	mov	r0, r6
 80011d8:	f000 f888 	bl	80012ec <_printf_i>
 80011dc:	e7ec      	b.n	80011b8 <_vfiprintf_r+0x1e4>
 80011de:	bf00      	nop
 80011e0:	08001704 	.word	0x08001704
 80011e4:	08001744 	.word	0x08001744
 80011e8:	08001724 	.word	0x08001724
 80011ec:	080016e4 	.word	0x080016e4
 80011f0:	0800174a 	.word	0x0800174a
 80011f4:	0800174e 	.word	0x0800174e
 80011f8:	00000000 	.word	0x00000000
 80011fc:	08000faf 	.word	0x08000faf

08001200 <_printf_common>:
 8001200:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001204:	4691      	mov	r9, r2
 8001206:	461f      	mov	r7, r3
 8001208:	688a      	ldr	r2, [r1, #8]
 800120a:	690b      	ldr	r3, [r1, #16]
 800120c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001210:	4293      	cmp	r3, r2
 8001212:	bfb8      	it	lt
 8001214:	4613      	movlt	r3, r2
 8001216:	f8c9 3000 	str.w	r3, [r9]
 800121a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800121e:	4606      	mov	r6, r0
 8001220:	460c      	mov	r4, r1
 8001222:	b112      	cbz	r2, 800122a <_printf_common+0x2a>
 8001224:	3301      	adds	r3, #1
 8001226:	f8c9 3000 	str.w	r3, [r9]
 800122a:	6823      	ldr	r3, [r4, #0]
 800122c:	0699      	lsls	r1, r3, #26
 800122e:	bf42      	ittt	mi
 8001230:	f8d9 3000 	ldrmi.w	r3, [r9]
 8001234:	3302      	addmi	r3, #2
 8001236:	f8c9 3000 	strmi.w	r3, [r9]
 800123a:	6825      	ldr	r5, [r4, #0]
 800123c:	f015 0506 	ands.w	r5, r5, #6
 8001240:	d107      	bne.n	8001252 <_printf_common+0x52>
 8001242:	f104 0a19 	add.w	sl, r4, #25
 8001246:	68e3      	ldr	r3, [r4, #12]
 8001248:	f8d9 2000 	ldr.w	r2, [r9]
 800124c:	1a9b      	subs	r3, r3, r2
 800124e:	42ab      	cmp	r3, r5
 8001250:	dc28      	bgt.n	80012a4 <_printf_common+0xa4>
 8001252:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8001256:	6822      	ldr	r2, [r4, #0]
 8001258:	3300      	adds	r3, #0
 800125a:	bf18      	it	ne
 800125c:	2301      	movne	r3, #1
 800125e:	0692      	lsls	r2, r2, #26
 8001260:	d42d      	bmi.n	80012be <_printf_common+0xbe>
 8001262:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001266:	4639      	mov	r1, r7
 8001268:	4630      	mov	r0, r6
 800126a:	47c0      	blx	r8
 800126c:	3001      	adds	r0, #1
 800126e:	d020      	beq.n	80012b2 <_printf_common+0xb2>
 8001270:	6823      	ldr	r3, [r4, #0]
 8001272:	68e5      	ldr	r5, [r4, #12]
 8001274:	f8d9 2000 	ldr.w	r2, [r9]
 8001278:	f003 0306 	and.w	r3, r3, #6
 800127c:	2b04      	cmp	r3, #4
 800127e:	bf08      	it	eq
 8001280:	1aad      	subeq	r5, r5, r2
 8001282:	68a3      	ldr	r3, [r4, #8]
 8001284:	6922      	ldr	r2, [r4, #16]
 8001286:	bf0c      	ite	eq
 8001288:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800128c:	2500      	movne	r5, #0
 800128e:	4293      	cmp	r3, r2
 8001290:	bfc4      	itt	gt
 8001292:	1a9b      	subgt	r3, r3, r2
 8001294:	18ed      	addgt	r5, r5, r3
 8001296:	f04f 0900 	mov.w	r9, #0
 800129a:	341a      	adds	r4, #26
 800129c:	454d      	cmp	r5, r9
 800129e:	d11a      	bne.n	80012d6 <_printf_common+0xd6>
 80012a0:	2000      	movs	r0, #0
 80012a2:	e008      	b.n	80012b6 <_printf_common+0xb6>
 80012a4:	2301      	movs	r3, #1
 80012a6:	4652      	mov	r2, sl
 80012a8:	4639      	mov	r1, r7
 80012aa:	4630      	mov	r0, r6
 80012ac:	47c0      	blx	r8
 80012ae:	3001      	adds	r0, #1
 80012b0:	d103      	bne.n	80012ba <_printf_common+0xba>
 80012b2:	f04f 30ff 	mov.w	r0, #4294967295
 80012b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80012ba:	3501      	adds	r5, #1
 80012bc:	e7c3      	b.n	8001246 <_printf_common+0x46>
 80012be:	18e1      	adds	r1, r4, r3
 80012c0:	1c5a      	adds	r2, r3, #1
 80012c2:	2030      	movs	r0, #48	; 0x30
 80012c4:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80012c8:	4422      	add	r2, r4
 80012ca:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80012ce:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80012d2:	3302      	adds	r3, #2
 80012d4:	e7c5      	b.n	8001262 <_printf_common+0x62>
 80012d6:	2301      	movs	r3, #1
 80012d8:	4622      	mov	r2, r4
 80012da:	4639      	mov	r1, r7
 80012dc:	4630      	mov	r0, r6
 80012de:	47c0      	blx	r8
 80012e0:	3001      	adds	r0, #1
 80012e2:	d0e6      	beq.n	80012b2 <_printf_common+0xb2>
 80012e4:	f109 0901 	add.w	r9, r9, #1
 80012e8:	e7d8      	b.n	800129c <_printf_common+0x9c>
	...

080012ec <_printf_i>:
 80012ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80012f0:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 80012f4:	460c      	mov	r4, r1
 80012f6:	7e09      	ldrb	r1, [r1, #24]
 80012f8:	b085      	sub	sp, #20
 80012fa:	296e      	cmp	r1, #110	; 0x6e
 80012fc:	4617      	mov	r7, r2
 80012fe:	4606      	mov	r6, r0
 8001300:	4698      	mov	r8, r3
 8001302:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8001304:	f000 80b3 	beq.w	800146e <_printf_i+0x182>
 8001308:	d822      	bhi.n	8001350 <_printf_i+0x64>
 800130a:	2963      	cmp	r1, #99	; 0x63
 800130c:	d036      	beq.n	800137c <_printf_i+0x90>
 800130e:	d80a      	bhi.n	8001326 <_printf_i+0x3a>
 8001310:	2900      	cmp	r1, #0
 8001312:	f000 80b9 	beq.w	8001488 <_printf_i+0x19c>
 8001316:	2958      	cmp	r1, #88	; 0x58
 8001318:	f000 8083 	beq.w	8001422 <_printf_i+0x136>
 800131c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001320:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8001324:	e032      	b.n	800138c <_printf_i+0xa0>
 8001326:	2964      	cmp	r1, #100	; 0x64
 8001328:	d001      	beq.n	800132e <_printf_i+0x42>
 800132a:	2969      	cmp	r1, #105	; 0x69
 800132c:	d1f6      	bne.n	800131c <_printf_i+0x30>
 800132e:	6820      	ldr	r0, [r4, #0]
 8001330:	6813      	ldr	r3, [r2, #0]
 8001332:	0605      	lsls	r5, r0, #24
 8001334:	f103 0104 	add.w	r1, r3, #4
 8001338:	d52a      	bpl.n	8001390 <_printf_i+0xa4>
 800133a:	681b      	ldr	r3, [r3, #0]
 800133c:	6011      	str	r1, [r2, #0]
 800133e:	2b00      	cmp	r3, #0
 8001340:	da03      	bge.n	800134a <_printf_i+0x5e>
 8001342:	222d      	movs	r2, #45	; 0x2d
 8001344:	425b      	negs	r3, r3
 8001346:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 800134a:	486f      	ldr	r0, [pc, #444]	; (8001508 <_printf_i+0x21c>)
 800134c:	220a      	movs	r2, #10
 800134e:	e039      	b.n	80013c4 <_printf_i+0xd8>
 8001350:	2973      	cmp	r1, #115	; 0x73
 8001352:	f000 809d 	beq.w	8001490 <_printf_i+0x1a4>
 8001356:	d808      	bhi.n	800136a <_printf_i+0x7e>
 8001358:	296f      	cmp	r1, #111	; 0x6f
 800135a:	d020      	beq.n	800139e <_printf_i+0xb2>
 800135c:	2970      	cmp	r1, #112	; 0x70
 800135e:	d1dd      	bne.n	800131c <_printf_i+0x30>
 8001360:	6823      	ldr	r3, [r4, #0]
 8001362:	f043 0320 	orr.w	r3, r3, #32
 8001366:	6023      	str	r3, [r4, #0]
 8001368:	e003      	b.n	8001372 <_printf_i+0x86>
 800136a:	2975      	cmp	r1, #117	; 0x75
 800136c:	d017      	beq.n	800139e <_printf_i+0xb2>
 800136e:	2978      	cmp	r1, #120	; 0x78
 8001370:	d1d4      	bne.n	800131c <_printf_i+0x30>
 8001372:	2378      	movs	r3, #120	; 0x78
 8001374:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8001378:	4864      	ldr	r0, [pc, #400]	; (800150c <_printf_i+0x220>)
 800137a:	e055      	b.n	8001428 <_printf_i+0x13c>
 800137c:	6813      	ldr	r3, [r2, #0]
 800137e:	1d19      	adds	r1, r3, #4
 8001380:	681b      	ldr	r3, [r3, #0]
 8001382:	6011      	str	r1, [r2, #0]
 8001384:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001388:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800138c:	2301      	movs	r3, #1
 800138e:	e08c      	b.n	80014aa <_printf_i+0x1be>
 8001390:	681b      	ldr	r3, [r3, #0]
 8001392:	6011      	str	r1, [r2, #0]
 8001394:	f010 0f40 	tst.w	r0, #64	; 0x40
 8001398:	bf18      	it	ne
 800139a:	b21b      	sxthne	r3, r3
 800139c:	e7cf      	b.n	800133e <_printf_i+0x52>
 800139e:	6813      	ldr	r3, [r2, #0]
 80013a0:	6825      	ldr	r5, [r4, #0]
 80013a2:	1d18      	adds	r0, r3, #4
 80013a4:	6010      	str	r0, [r2, #0]
 80013a6:	0628      	lsls	r0, r5, #24
 80013a8:	d501      	bpl.n	80013ae <_printf_i+0xc2>
 80013aa:	681b      	ldr	r3, [r3, #0]
 80013ac:	e002      	b.n	80013b4 <_printf_i+0xc8>
 80013ae:	0668      	lsls	r0, r5, #25
 80013b0:	d5fb      	bpl.n	80013aa <_printf_i+0xbe>
 80013b2:	881b      	ldrh	r3, [r3, #0]
 80013b4:	4854      	ldr	r0, [pc, #336]	; (8001508 <_printf_i+0x21c>)
 80013b6:	296f      	cmp	r1, #111	; 0x6f
 80013b8:	bf14      	ite	ne
 80013ba:	220a      	movne	r2, #10
 80013bc:	2208      	moveq	r2, #8
 80013be:	2100      	movs	r1, #0
 80013c0:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80013c4:	6865      	ldr	r5, [r4, #4]
 80013c6:	60a5      	str	r5, [r4, #8]
 80013c8:	2d00      	cmp	r5, #0
 80013ca:	f2c0 8095 	blt.w	80014f8 <_printf_i+0x20c>
 80013ce:	6821      	ldr	r1, [r4, #0]
 80013d0:	f021 0104 	bic.w	r1, r1, #4
 80013d4:	6021      	str	r1, [r4, #0]
 80013d6:	2b00      	cmp	r3, #0
 80013d8:	d13d      	bne.n	8001456 <_printf_i+0x16a>
 80013da:	2d00      	cmp	r5, #0
 80013dc:	f040 808e 	bne.w	80014fc <_printf_i+0x210>
 80013e0:	4665      	mov	r5, ip
 80013e2:	2a08      	cmp	r2, #8
 80013e4:	d10b      	bne.n	80013fe <_printf_i+0x112>
 80013e6:	6823      	ldr	r3, [r4, #0]
 80013e8:	07db      	lsls	r3, r3, #31
 80013ea:	d508      	bpl.n	80013fe <_printf_i+0x112>
 80013ec:	6923      	ldr	r3, [r4, #16]
 80013ee:	6862      	ldr	r2, [r4, #4]
 80013f0:	429a      	cmp	r2, r3
 80013f2:	bfde      	ittt	le
 80013f4:	2330      	movle	r3, #48	; 0x30
 80013f6:	f805 3c01 	strble.w	r3, [r5, #-1]
 80013fa:	f105 35ff 	addle.w	r5, r5, #4294967295
 80013fe:	ebac 0305 	sub.w	r3, ip, r5
 8001402:	6123      	str	r3, [r4, #16]
 8001404:	f8cd 8000 	str.w	r8, [sp]
 8001408:	463b      	mov	r3, r7
 800140a:	aa03      	add	r2, sp, #12
 800140c:	4621      	mov	r1, r4
 800140e:	4630      	mov	r0, r6
 8001410:	f7ff fef6 	bl	8001200 <_printf_common>
 8001414:	3001      	adds	r0, #1
 8001416:	d14d      	bne.n	80014b4 <_printf_i+0x1c8>
 8001418:	f04f 30ff 	mov.w	r0, #4294967295
 800141c:	b005      	add	sp, #20
 800141e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001422:	4839      	ldr	r0, [pc, #228]	; (8001508 <_printf_i+0x21c>)
 8001424:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8001428:	6813      	ldr	r3, [r2, #0]
 800142a:	6821      	ldr	r1, [r4, #0]
 800142c:	1d1d      	adds	r5, r3, #4
 800142e:	681b      	ldr	r3, [r3, #0]
 8001430:	6015      	str	r5, [r2, #0]
 8001432:	060a      	lsls	r2, r1, #24
 8001434:	d50b      	bpl.n	800144e <_printf_i+0x162>
 8001436:	07ca      	lsls	r2, r1, #31
 8001438:	bf44      	itt	mi
 800143a:	f041 0120 	orrmi.w	r1, r1, #32
 800143e:	6021      	strmi	r1, [r4, #0]
 8001440:	b91b      	cbnz	r3, 800144a <_printf_i+0x15e>
 8001442:	6822      	ldr	r2, [r4, #0]
 8001444:	f022 0220 	bic.w	r2, r2, #32
 8001448:	6022      	str	r2, [r4, #0]
 800144a:	2210      	movs	r2, #16
 800144c:	e7b7      	b.n	80013be <_printf_i+0xd2>
 800144e:	064d      	lsls	r5, r1, #25
 8001450:	bf48      	it	mi
 8001452:	b29b      	uxthmi	r3, r3
 8001454:	e7ef      	b.n	8001436 <_printf_i+0x14a>
 8001456:	4665      	mov	r5, ip
 8001458:	fbb3 f1f2 	udiv	r1, r3, r2
 800145c:	fb02 3311 	mls	r3, r2, r1, r3
 8001460:	5cc3      	ldrb	r3, [r0, r3]
 8001462:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8001466:	460b      	mov	r3, r1
 8001468:	2900      	cmp	r1, #0
 800146a:	d1f5      	bne.n	8001458 <_printf_i+0x16c>
 800146c:	e7b9      	b.n	80013e2 <_printf_i+0xf6>
 800146e:	6813      	ldr	r3, [r2, #0]
 8001470:	6825      	ldr	r5, [r4, #0]
 8001472:	6961      	ldr	r1, [r4, #20]
 8001474:	1d18      	adds	r0, r3, #4
 8001476:	6010      	str	r0, [r2, #0]
 8001478:	0628      	lsls	r0, r5, #24
 800147a:	681b      	ldr	r3, [r3, #0]
 800147c:	d501      	bpl.n	8001482 <_printf_i+0x196>
 800147e:	6019      	str	r1, [r3, #0]
 8001480:	e002      	b.n	8001488 <_printf_i+0x19c>
 8001482:	066a      	lsls	r2, r5, #25
 8001484:	d5fb      	bpl.n	800147e <_printf_i+0x192>
 8001486:	8019      	strh	r1, [r3, #0]
 8001488:	2300      	movs	r3, #0
 800148a:	6123      	str	r3, [r4, #16]
 800148c:	4665      	mov	r5, ip
 800148e:	e7b9      	b.n	8001404 <_printf_i+0x118>
 8001490:	6813      	ldr	r3, [r2, #0]
 8001492:	1d19      	adds	r1, r3, #4
 8001494:	6011      	str	r1, [r2, #0]
 8001496:	681d      	ldr	r5, [r3, #0]
 8001498:	6862      	ldr	r2, [r4, #4]
 800149a:	2100      	movs	r1, #0
 800149c:	4628      	mov	r0, r5
 800149e:	f7fe febf 	bl	8000220 <memchr>
 80014a2:	b108      	cbz	r0, 80014a8 <_printf_i+0x1bc>
 80014a4:	1b40      	subs	r0, r0, r5
 80014a6:	6060      	str	r0, [r4, #4]
 80014a8:	6863      	ldr	r3, [r4, #4]
 80014aa:	6123      	str	r3, [r4, #16]
 80014ac:	2300      	movs	r3, #0
 80014ae:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80014b2:	e7a7      	b.n	8001404 <_printf_i+0x118>
 80014b4:	6923      	ldr	r3, [r4, #16]
 80014b6:	462a      	mov	r2, r5
 80014b8:	4639      	mov	r1, r7
 80014ba:	4630      	mov	r0, r6
 80014bc:	47c0      	blx	r8
 80014be:	3001      	adds	r0, #1
 80014c0:	d0aa      	beq.n	8001418 <_printf_i+0x12c>
 80014c2:	6823      	ldr	r3, [r4, #0]
 80014c4:	079b      	lsls	r3, r3, #30
 80014c6:	d413      	bmi.n	80014f0 <_printf_i+0x204>
 80014c8:	68e0      	ldr	r0, [r4, #12]
 80014ca:	9b03      	ldr	r3, [sp, #12]
 80014cc:	4298      	cmp	r0, r3
 80014ce:	bfb8      	it	lt
 80014d0:	4618      	movlt	r0, r3
 80014d2:	e7a3      	b.n	800141c <_printf_i+0x130>
 80014d4:	2301      	movs	r3, #1
 80014d6:	464a      	mov	r2, r9
 80014d8:	4639      	mov	r1, r7
 80014da:	4630      	mov	r0, r6
 80014dc:	47c0      	blx	r8
 80014de:	3001      	adds	r0, #1
 80014e0:	d09a      	beq.n	8001418 <_printf_i+0x12c>
 80014e2:	3501      	adds	r5, #1
 80014e4:	68e3      	ldr	r3, [r4, #12]
 80014e6:	9a03      	ldr	r2, [sp, #12]
 80014e8:	1a9b      	subs	r3, r3, r2
 80014ea:	42ab      	cmp	r3, r5
 80014ec:	dcf2      	bgt.n	80014d4 <_printf_i+0x1e8>
 80014ee:	e7eb      	b.n	80014c8 <_printf_i+0x1dc>
 80014f0:	2500      	movs	r5, #0
 80014f2:	f104 0919 	add.w	r9, r4, #25
 80014f6:	e7f5      	b.n	80014e4 <_printf_i+0x1f8>
 80014f8:	2b00      	cmp	r3, #0
 80014fa:	d1ac      	bne.n	8001456 <_printf_i+0x16a>
 80014fc:	7803      	ldrb	r3, [r0, #0]
 80014fe:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001502:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001506:	e76c      	b.n	80013e2 <_printf_i+0xf6>
 8001508:	08001755 	.word	0x08001755
 800150c:	08001766 	.word	0x08001766

08001510 <_sbrk_r>:
 8001510:	b538      	push	{r3, r4, r5, lr}
 8001512:	4c06      	ldr	r4, [pc, #24]	; (800152c <_sbrk_r+0x1c>)
 8001514:	2300      	movs	r3, #0
 8001516:	4605      	mov	r5, r0
 8001518:	4608      	mov	r0, r1
 800151a:	6023      	str	r3, [r4, #0]
 800151c:	f7ff f8dc 	bl	80006d8 <_sbrk>
 8001520:	1c43      	adds	r3, r0, #1
 8001522:	d102      	bne.n	800152a <_sbrk_r+0x1a>
 8001524:	6823      	ldr	r3, [r4, #0]
 8001526:	b103      	cbz	r3, 800152a <_sbrk_r+0x1a>
 8001528:	602b      	str	r3, [r5, #0]
 800152a:	bd38      	pop	{r3, r4, r5, pc}
 800152c:	20000094 	.word	0x20000094

08001530 <__sread>:
 8001530:	b510      	push	{r4, lr}
 8001532:	460c      	mov	r4, r1
 8001534:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001538:	f000 f896 	bl	8001668 <_read_r>
 800153c:	2800      	cmp	r0, #0
 800153e:	bfab      	itete	ge
 8001540:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001542:	89a3      	ldrhlt	r3, [r4, #12]
 8001544:	181b      	addge	r3, r3, r0
 8001546:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800154a:	bfac      	ite	ge
 800154c:	6563      	strge	r3, [r4, #84]	; 0x54
 800154e:	81a3      	strhlt	r3, [r4, #12]
 8001550:	bd10      	pop	{r4, pc}

08001552 <__swrite>:
 8001552:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001556:	461f      	mov	r7, r3
 8001558:	898b      	ldrh	r3, [r1, #12]
 800155a:	05db      	lsls	r3, r3, #23
 800155c:	4605      	mov	r5, r0
 800155e:	460c      	mov	r4, r1
 8001560:	4616      	mov	r6, r2
 8001562:	d505      	bpl.n	8001570 <__swrite+0x1e>
 8001564:	2302      	movs	r3, #2
 8001566:	2200      	movs	r2, #0
 8001568:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800156c:	f000 f868 	bl	8001640 <_lseek_r>
 8001570:	89a3      	ldrh	r3, [r4, #12]
 8001572:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001576:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800157a:	81a3      	strh	r3, [r4, #12]
 800157c:	4632      	mov	r2, r6
 800157e:	463b      	mov	r3, r7
 8001580:	4628      	mov	r0, r5
 8001582:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001586:	f000 b817 	b.w	80015b8 <_write_r>

0800158a <__sseek>:
 800158a:	b510      	push	{r4, lr}
 800158c:	460c      	mov	r4, r1
 800158e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001592:	f000 f855 	bl	8001640 <_lseek_r>
 8001596:	1c43      	adds	r3, r0, #1
 8001598:	89a3      	ldrh	r3, [r4, #12]
 800159a:	bf15      	itete	ne
 800159c:	6560      	strne	r0, [r4, #84]	; 0x54
 800159e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80015a2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80015a6:	81a3      	strheq	r3, [r4, #12]
 80015a8:	bf18      	it	ne
 80015aa:	81a3      	strhne	r3, [r4, #12]
 80015ac:	bd10      	pop	{r4, pc}

080015ae <__sclose>:
 80015ae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80015b2:	f000 b813 	b.w	80015dc <_close_r>
	...

080015b8 <_write_r>:
 80015b8:	b538      	push	{r3, r4, r5, lr}
 80015ba:	4c07      	ldr	r4, [pc, #28]	; (80015d8 <_write_r+0x20>)
 80015bc:	4605      	mov	r5, r0
 80015be:	4608      	mov	r0, r1
 80015c0:	4611      	mov	r1, r2
 80015c2:	2200      	movs	r2, #0
 80015c4:	6022      	str	r2, [r4, #0]
 80015c6:	461a      	mov	r2, r3
 80015c8:	f7ff f835 	bl	8000636 <_write>
 80015cc:	1c43      	adds	r3, r0, #1
 80015ce:	d102      	bne.n	80015d6 <_write_r+0x1e>
 80015d0:	6823      	ldr	r3, [r4, #0]
 80015d2:	b103      	cbz	r3, 80015d6 <_write_r+0x1e>
 80015d4:	602b      	str	r3, [r5, #0]
 80015d6:	bd38      	pop	{r3, r4, r5, pc}
 80015d8:	20000094 	.word	0x20000094

080015dc <_close_r>:
 80015dc:	b538      	push	{r3, r4, r5, lr}
 80015de:	4c06      	ldr	r4, [pc, #24]	; (80015f8 <_close_r+0x1c>)
 80015e0:	2300      	movs	r3, #0
 80015e2:	4605      	mov	r5, r0
 80015e4:	4608      	mov	r0, r1
 80015e6:	6023      	str	r3, [r4, #0]
 80015e8:	f7ff f841 	bl	800066e <_close>
 80015ec:	1c43      	adds	r3, r0, #1
 80015ee:	d102      	bne.n	80015f6 <_close_r+0x1a>
 80015f0:	6823      	ldr	r3, [r4, #0]
 80015f2:	b103      	cbz	r3, 80015f6 <_close_r+0x1a>
 80015f4:	602b      	str	r3, [r5, #0]
 80015f6:	bd38      	pop	{r3, r4, r5, pc}
 80015f8:	20000094 	.word	0x20000094

080015fc <_fstat_r>:
 80015fc:	b538      	push	{r3, r4, r5, lr}
 80015fe:	4c07      	ldr	r4, [pc, #28]	; (800161c <_fstat_r+0x20>)
 8001600:	2300      	movs	r3, #0
 8001602:	4605      	mov	r5, r0
 8001604:	4608      	mov	r0, r1
 8001606:	4611      	mov	r1, r2
 8001608:	6023      	str	r3, [r4, #0]
 800160a:	f7ff f83c 	bl	8000686 <_fstat>
 800160e:	1c43      	adds	r3, r0, #1
 8001610:	d102      	bne.n	8001618 <_fstat_r+0x1c>
 8001612:	6823      	ldr	r3, [r4, #0]
 8001614:	b103      	cbz	r3, 8001618 <_fstat_r+0x1c>
 8001616:	602b      	str	r3, [r5, #0]
 8001618:	bd38      	pop	{r3, r4, r5, pc}
 800161a:	bf00      	nop
 800161c:	20000094 	.word	0x20000094

08001620 <_isatty_r>:
 8001620:	b538      	push	{r3, r4, r5, lr}
 8001622:	4c06      	ldr	r4, [pc, #24]	; (800163c <_isatty_r+0x1c>)
 8001624:	2300      	movs	r3, #0
 8001626:	4605      	mov	r5, r0
 8001628:	4608      	mov	r0, r1
 800162a:	6023      	str	r3, [r4, #0]
 800162c:	f7ff f83b 	bl	80006a6 <_isatty>
 8001630:	1c43      	adds	r3, r0, #1
 8001632:	d102      	bne.n	800163a <_isatty_r+0x1a>
 8001634:	6823      	ldr	r3, [r4, #0]
 8001636:	b103      	cbz	r3, 800163a <_isatty_r+0x1a>
 8001638:	602b      	str	r3, [r5, #0]
 800163a:	bd38      	pop	{r3, r4, r5, pc}
 800163c:	20000094 	.word	0x20000094

08001640 <_lseek_r>:
 8001640:	b538      	push	{r3, r4, r5, lr}
 8001642:	4c07      	ldr	r4, [pc, #28]	; (8001660 <_lseek_r+0x20>)
 8001644:	4605      	mov	r5, r0
 8001646:	4608      	mov	r0, r1
 8001648:	4611      	mov	r1, r2
 800164a:	2200      	movs	r2, #0
 800164c:	6022      	str	r2, [r4, #0]
 800164e:	461a      	mov	r2, r3
 8001650:	f7ff f834 	bl	80006bc <_lseek>
 8001654:	1c43      	adds	r3, r0, #1
 8001656:	d102      	bne.n	800165e <_lseek_r+0x1e>
 8001658:	6823      	ldr	r3, [r4, #0]
 800165a:	b103      	cbz	r3, 800165e <_lseek_r+0x1e>
 800165c:	602b      	str	r3, [r5, #0]
 800165e:	bd38      	pop	{r3, r4, r5, pc}
 8001660:	20000094 	.word	0x20000094

08001664 <__malloc_lock>:
 8001664:	4770      	bx	lr

08001666 <__malloc_unlock>:
 8001666:	4770      	bx	lr

08001668 <_read_r>:
 8001668:	b538      	push	{r3, r4, r5, lr}
 800166a:	4c07      	ldr	r4, [pc, #28]	; (8001688 <_read_r+0x20>)
 800166c:	4605      	mov	r5, r0
 800166e:	4608      	mov	r0, r1
 8001670:	4611      	mov	r1, r2
 8001672:	2200      	movs	r2, #0
 8001674:	6022      	str	r2, [r4, #0]
 8001676:	461a      	mov	r2, r3
 8001678:	f7fe ffc0 	bl	80005fc <_read>
 800167c:	1c43      	adds	r3, r0, #1
 800167e:	d102      	bne.n	8001686 <_read_r+0x1e>
 8001680:	6823      	ldr	r3, [r4, #0]
 8001682:	b103      	cbz	r3, 8001686 <_read_r+0x1e>
 8001684:	602b      	str	r3, [r5, #0]
 8001686:	bd38      	pop	{r3, r4, r5, pc}
 8001688:	20000094 	.word	0x20000094

0800168c <_init>:
 800168c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800168e:	bf00      	nop
 8001690:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001692:	bc08      	pop	{r3}
 8001694:	469e      	mov	lr, r3
 8001696:	4770      	bx	lr

08001698 <_fini>:
 8001698:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800169a:	bf00      	nop
 800169c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800169e:	bc08      	pop	{r3}
 80016a0:	469e      	mov	lr, r3
 80016a2:	4770      	bx	lr
